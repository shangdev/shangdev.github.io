<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>风吹叶落</title>
  
  <subtitle>技术分享博客</subtitle>
  <link href="https://shangdev.github.io/atom.xml" rel="self"/>
  
  <link href="https://shangdev.github.io/"/>
  <updated>2023-10-18T03:08:41.945Z</updated>
  <id>https://shangdev.github.io/</id>
  
  <author>
    <name>Xiongwei Shang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IOS微信多开分身指南</title>
    <link href="https://shangdev.github.io/2023/03/23/IOS%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80%E5%88%86%E8%BA%AB%E6%8C%87%E5%8D%97/"/>
    <id>https://shangdev.github.io/2023/03/23/IOS%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80%E5%88%86%E8%BA%AB%E6%8C%87%E5%8D%97/</id>
    <published>2023-03-23T02:02:00.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<h2 id="越狱"><a href="#越狱" class="headerlink" title="越狱"></a>越狱</h2><p>设备：IPhone7<br>系统：iOS 14.7.1<br>越狱方式：checkra1n（v0.12.4）</p><hr><p>首先下载checkra1n，准备8g的U盘用来制作USB启动盘。</p><p>然后用usb线连接电脑和手机，插入制作好的USB启动盘，重启电脑进入BIOS，选择USB启动。</p><blockquote><p>如果start按键不能选择，则需要选择“Options”选项，开启“Allow untested iOS/ iPadOS/tvOS versions”项，然后返回即可选取“Start”。</p></blockquote><h2 id="脱壳"><a href="#脱壳" class="headerlink" title="脱壳"></a>脱壳</h2><p>这里介绍2种方式。以及脱壳后必要的处理。</p><h3 id="frida-ios-dump"><a href="#frida-ios-dump" class="headerlink" title="frida-ios-dump"></a>frida-ios-dump</h3><p>笔者使用的是windows系统，所以从 <code>https://github.com/ViRb3/frida-ios-dump/tree/pr-windows</code> 下载对应的库：</p><p>安装依赖：<code>pip install -r requirements.txt</code>。</p><p>使用编辑器打开dump.py文件，修改ssh连接信息（这里不太理解，因为如果打开iTunes，使用数据线连接PC也可以正常操作，而不需要改这个ssh信息）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User &#x3D; &#39;root&#39;</span><br><span class="line">Password &#x3D; &#39;alpine&#39;</span><br><span class="line">Host &#x3D; &#39;127.0.0.1&#39;</span><br><span class="line">Port &#x3D; 22</span><br></pre></td></tr></table></figure><p>对应的，在手机上，cydia添加源：<code>https://build.frida.re</code>，搜索 frida 并安装。</p><p>然后用越狱后的手机数据线连接电脑，打开iTunes，在frida-ios-dump目录下打开命令台，输入：<code>puthon./dump.py -l</code>查看手机应用列表，如果没有重新插拨数据线。</p><p>输入：<code>python ./dump.py &lt;应用名，如：com.centent.xin&gt;</code>脱壳，成功后会在当前目录下生成对应的ipa包。</p><blockquote><p>很奇怪，只有用爱思助手连接手机后frida-ios-dump才能识别USB连接成功。</p></blockquote><h3 id="CrackerXI"><a href="#CrackerXI" class="headerlink" title="CrackerXI+"></a>CrackerXI+</h3><p>这个就比较傻瓜式操作了，cydia添加源：<code>https://apt.wxhbts.pro</code>，搜索：CrackerXI 脱壳工具 并安装。</p><p>打开应用，点击右上角图标刷新手机已安装应用列表，选择要脱壳的应用，比如微信。</p><p>成功后会在 <code>var/mobile/Documents/CrackerXI</code> 目录下生成xx.ipa，导出到电脑即可。</p><h3 id="ipa处理"><a href="#ipa处理" class="headerlink" title="ipa处理"></a>ipa处理</h3><p>脱壳后的ipa包还需要移除里边的Plugin和Watch文件夹（否则在用爱思助手一键签名时会提示加密）。</p><p>还需要：</p><ol><li>修改app名称（英文，不能用中文，否则使用AltStore安装时提示无效字符）</li><li>修改Bunding ID。</li><li>移除安装设备限制。</li></ol><p>推荐使用sideloadly来一键处理以上步骤。</p><h2 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h2><p>可以使用爱思助手一键签名工具，但是笔者不推荐，原因是他自己安装的iTunes你无法打开使用。</p><p>推荐使用AltStore，使用他可以一键续签证书（使用个人apple Id签名仅7天有效期），关键是app数据不丢失。</p><blockquote><p>AltStore 里有个App过期时间以及App IDs过期时间，重要的是App过期时间，也就是说App IDs过期不影响APP的运行，只是超过10个在有效期内的IDs后，不能再生成了。</p></blockquote><blockquote><p>在Windows下使用AltStore也比较坑，经常性爆雷，有条件最好用mac。</p></blockquote><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>坑点都在文中说明了，祝君一路顺风。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://rateltalk.s3.ladydaily.com/IOS/Checkra1n/checkn1x-1.1.7.iso">Checkra1n v0.12.4</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;越狱&quot;&gt;&lt;a href=&quot;#越狱&quot; class=&quot;headerlink&quot; title=&quot;越狱&quot;&gt;&lt;/a&gt;越狱&lt;/h2&gt;&lt;p&gt;设备：IPhone7&lt;br&gt;系统：iOS 14.7.1&lt;br&gt;越狱方式：checkra1n（v0.12.4）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;首先下</summary>
      
    
    
    
    <category term="越狱" scheme="https://shangdev.github.io/categories/%E8%B6%8A%E7%8B%B1/"/>
    
    <category term="微信" scheme="https://shangdev.github.io/categories/%E8%B6%8A%E7%8B%B1/%E5%BE%AE%E4%BF%A1/"/>
    
    
    <category term="IOS" scheme="https://shangdev.github.io/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>易语言 网页_访问_对象 在windows server 2008 R2上无法发送https请求的解决方案</title>
    <link href="https://shangdev.github.io/2023/02/28/%E6%98%93%E8%AF%AD%E8%A8%80-%E7%BD%91%E9%A1%B5-%E8%AE%BF%E9%97%AE-%E5%AF%B9%E8%B1%A1-%E5%9C%A8windows-server-2008-R2%E4%B8%8A%E6%97%A0%E6%B3%95%E5%8F%91%E9%80%81https%E8%AF%B7%E6%B1%82%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://shangdev.github.io/2023/02/28/%E6%98%93%E8%AF%AD%E8%A8%80-%E7%BD%91%E9%A1%B5-%E8%AE%BF%E9%97%AE-%E5%AF%B9%E8%B1%A1-%E5%9C%A8windows-server-2008-R2%E4%B8%8A%E6%97%A0%E6%B3%95%E5%8F%91%E9%80%81https%E8%AF%B7%E6%B1%82%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2023-02-28T06:01:45.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>针对易语言 网页_访问_对象 在windows server 2008 R2上无法发送https请求的问题，网上已经给出了解决方案，即在 Windows 中启用 TLS1.1 和 TLS1.2 安全协议。</p><a id="more"></a><p>首先安装补丁：<a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB976932">https://www.catalog.update.microsoft.com/Search.aspx?q=KB976932</a></p><p>然后更新注册表，自动工具：<a href="https://download.microsoft.com/download/0/6/5/0658B1A7-6D2E-474F-BC2C-D69E5B9E9A68/MicrosoftEasyFix51044.msi">https://download.microsoft.com/download/0/6/5/0658B1A7-6D2E-474F-BC2C-D69E5B9E9A68/MicrosoftEasyFix51044.msi</a></p><p>参考链接：</p><ul><li><p><a href="https://support.microsoft.com/zh-cn/topic/%E6%9B%B4%E6%96%B0%E4%BA%86-%E4%BB%A5%E5%9C%A8-windows-%E4%B8%AD%E7%9A%84-winhttp-%E4%B8%AD%E5%90%AF%E7%94%A8-tls-1-1-%E5%92%8C-tls-1-2-%E4%BD%9C%E4%B8%BA%E9%BB%98%E8%AE%A4%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE-c4bd73d2-31d7-761e-0178-11268bb10392">在 Windows 中的 WinHTTP 中启用 TLS 1.1 和 TLS 1.2 作为默认安全协议</a></p></li><li><p><a href="https://bbs.125.la/thread-14086625-1-1.html">让 Winhttp 支持 TLS1.1/TLS1.2</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;针对易语言 网页_访问_对象 在windows server 2008 R2上无法发送https请求的问题，网上已经给出了解决方案，即在 Windows 中启用 TLS1.1 和 TLS1.2 安全协议。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="https://shangdev.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="易语言" scheme="https://shangdev.github.io/tags/%E6%98%93%E8%AF%AD%E8%A8%80/"/>
    
    <category term="WinHttp" scheme="https://shangdev.github.io/tags/WinHttp/"/>
    
  </entry>
  
  <entry>
    <title>puppeteer实现浏览器自动化和爬虫的一些最佳实践</title>
    <link href="https://shangdev.github.io/2023/02/03/puppeteer%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E5%92%8C%E7%88%AC%E8%99%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>https://shangdev.github.io/2023/02/03/puppeteer%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E5%92%8C%E7%88%AC%E8%99%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</id>
    <published>2023-02-03T08:25:44.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>这里只记录一些易忽略且重要的点。</p><h2 id="无头及调试模式下全屏设置"><a href="#无头及调试模式下全屏设置" class="headerlink" title="无头及调试模式下全屏设置"></a>无头及调试模式下全屏设置</h2><p>调试模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const browser &#x3D; await puppeteer.launch(&#123;</span><br><span class="line">  headless: false,</span><br><span class="line">  defaultViewport: null,</span><br><span class="line">  args: [</span><br><span class="line">    &#39;--start-maximized&#39;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>无头模式，此时再设置args参数为 <code>--start-maximized</code> 是无效的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const browser &#x3D; await puppeteer.launch(&#123;</span><br><span class="line">  headless: true,</span><br><span class="line">  args: [</span><br><span class="line">    &quot;--window-size&#x3D;1920,1080&quot;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">await page.setViewport(&#123;width: 1920, height: 1080&#125;);</span><br></pre></td></tr></table></figure><h2 id="设置文档下载路径及清除缓存"><a href="#设置文档下载路径及清除缓存" class="headerlink" title="设置文档下载路径及清除缓存"></a>设置文档下载路径及清除缓存</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const client &#x3D; await page.target().createCDPSession();</span><br><span class="line">await client.send(&quot;Network.clearBrowserCookies&quot;);</span><br><span class="line">await client.send(&quot;Network.clearBrowserCache&quot;);</span><br><span class="line">await client.send(&quot;Page.setDownloadBehavior&quot;, &#123;</span><br><span class="line">  behavior: &quot;allow&quot;,</span><br><span class="line">  downloadPath: targetDir,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const fileChose &#x3D; await page.waitForSelector(&#39;input[type&#x3D;&quot;file&quot;]&#39;);</span><br><span class="line">await fileChose.uploadFile(sourcePath);</span><br></pre></td></tr></table></figure><h2 id="输入框输入"><a href="#输入框输入" class="headerlink" title="输入框输入"></a>输入框输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">await page.type(&#39;.search-box__input&#39;, &#39;text...&#39;);</span><br></pre></td></tr></table></figure><h2 id="等待选择器出现并点击"><a href="#等待选择器出现并点击" class="headerlink" title="等待选择器出现并点击"></a>等待选择器出现并点击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const searchResultSelector &#x3D; &#39;.button&#39;;</span><br><span class="line">await page.waitForSelector(&quot;searchResultSelector&quot;);</span><br><span class="line">await page.click(searchResultSelector);</span><br></pre></td></tr></table></figure><h1 id="等待选择器出现并获取其内文本"><a href="#等待选择器出现并获取其内文本" class="headerlink" title="等待选择器出现并获取其内文本"></a>等待选择器出现并获取其内文本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const textSelector &#x3D; await page.waitForSelector(</span><br><span class="line">&#39;text&#x2F;Customize and automate&#39;</span><br><span class="line">);</span><br><span class="line">const text &#x3D; await textSelector.evaluate(el &#x3D;&gt; el.textContent);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里只记录一些易忽略且重要的点。&lt;/p&gt;
&lt;h2 id=&quot;无头及调试模式下全屏设置&quot;&gt;&lt;a href=&quot;#无头及调试模式下全屏设置&quot; class=&quot;headerlink&quot; title=&quot;无头及调试模式下全屏设置&quot;&gt;&lt;/a&gt;无头及调试模式下全屏设置&lt;/h2&gt;&lt;p&gt;调试模式&lt;/</summary>
      
    
    
    
    <category term="浏览器自动化" scheme="https://shangdev.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
    <category term="Puppeteer" scheme="https://shangdev.github.io/tags/Puppeteer/"/>
    
  </entry>
  
  <entry>
    <title>记一次Mysql重启报错 The server quit without updating PID file 的解决</title>
    <link href="https://shangdev.github.io/2022/08/25/%E8%AE%B0%E4%B8%80%E6%AC%A1Mysql%E9%87%8D%E5%90%AF%E6%8A%A5%E9%94%99-The-server-quit-without-updating-PID-file-%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>https://shangdev.github.io/2022/08/25/%E8%AE%B0%E4%B8%80%E6%AC%A1Mysql%E9%87%8D%E5%90%AF%E6%8A%A5%E9%94%99-The-server-quit-without-updating-PID-file-%E7%9A%84%E8%A7%A3%E5%86%B3/</id>
    <published>2022-08-25T01:52:04.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>本想晚上没人使用系统，重启MySQL以使用最新的配置，没成想5分钟的工作50分钟都没解决。<br>重启MySQL一直提示：The server quit without updating PID file 错误，查看error.log也没有任何提示。</p><a id="more"></a><p>经历网上各种解决方案后，亦没有用。偶然一个想法，试试指定配置文件（my.cnf）启动试试。<br>没成想指定配置文件再次启动，提示配置有错误，查看提示发现是 sql_mode 中 no_engine_substitution 少了一个字母 n，修改后再次启动成功。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本想晚上没人使用系统，重启MySQL以使用最新的配置，没成想5分钟的工作50分钟都没解决。&lt;br&gt;重启MySQL一直提示：The server quit without updating PID file 错误，查看error.log也没有任何提示。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://shangdev.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://shangdev.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>解决windows安装xampp后mysql语句查询缓慢</title>
    <link href="https://shangdev.github.io/2021/10/12/%E8%A7%A3%E5%86%B3windows%E5%AE%89%E8%A3%85xampp%E5%90%8Emysql%E6%9F%A5%E8%AF%A2%E7%BC%93%E6%85%A2/"/>
    <id>https://shangdev.github.io/2021/10/12/%E8%A7%A3%E5%86%B3windows%E5%AE%89%E8%A3%85xampp%E5%90%8Emysql%E6%9F%A5%E8%AF%A2%E7%BC%93%E6%85%A2/</id>
    <published>2021-10-12T01:00:31.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>Windows 安装 xampp 集成开发环境后，MySQL 语句查询异常缓慢，这里给出解决方法。</p><a id="more"></a><p>修改 my.cnf 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#----------------------------------------------------</span><br><span class="line">#          !!!! Query Cache Config !!!!</span><br><span class="line">#----------------------------------------------------</span><br><span class="line"></span><br><span class="line">query-cache-size &#x3D; 524288000</span><br><span class="line">query-cache-limit &#x3D; 5242880</span><br><span class="line">query-cache-type &#x3D; 1</span><br><span class="line"></span><br><span class="line">#----------------------------------------------------</span><br><span class="line">#          !!!! InnoDB Buffer Config !!!!</span><br><span class="line">#----------------------------------------------------</span><br><span class="line"></span><br><span class="line">innodb-buffer-pool-size &#x3D; 1000M</span><br><span class="line">innodb-log-files-in-group &#x3D; 2</span><br><span class="line">innodb-log-buffer-size &#x3D; 10M</span><br><span class="line">innodb-file-per-table &#x3D; 1</span><br></pre></td></tr></table></figure><p>重启 apache、mysql 服务即可。</p><p>贴上完整的 my.cnf 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"># The following options will be passed to all MySQL clients</span><br><span class="line">[client] </span><br><span class="line"># password       &#x3D; your_password </span><br><span class="line">port            &#x3D; 3306 </span><br><span class="line">socket          &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&#x2F;mysql.sock&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Here follows entries for some specific programs </span><br><span class="line"></span><br><span class="line"># The MySQL server</span><br><span class="line">[mysqld]</span><br><span class="line">port&#x3D; 3306</span><br><span class="line">socket &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&#x2F;mysql.sock&quot;</span><br><span class="line">basedir &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&quot; </span><br><span class="line">tmpdir &#x3D; &quot;C:&#x2F;xampp&#x2F;tmp&quot; </span><br><span class="line">datadir &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&#x2F;data&quot;</span><br><span class="line">pid_file &#x3D; &quot;mysql.pid&quot;</span><br><span class="line"># enable-named-pipe</span><br><span class="line">key_buffer &#x3D; 16M</span><br><span class="line">max_allowed_packet &#x3D; 1M</span><br><span class="line">sort_buffer_size &#x3D; 512K</span><br><span class="line">net_buffer_length &#x3D; 8K</span><br><span class="line">read_buffer_size &#x3D; 256K</span><br><span class="line">read_rnd_buffer_size &#x3D; 512K</span><br><span class="line">myisam_sort_buffer_size &#x3D; 8M</span><br><span class="line">log_error &#x3D; &quot;mysql_error.log&quot;</span><br><span class="line"></span><br><span class="line"># Change here for bind listening</span><br><span class="line"># bind-address&#x3D;&quot;127.0.0.1&quot; </span><br><span class="line"># bind-address &#x3D; ::1          # for ipv6</span><br><span class="line"></span><br><span class="line"># Where do all the plugins live</span><br><span class="line">plugin_dir &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&#x2F;lib&#x2F;plugin&#x2F;&quot; </span><br><span class="line"></span><br><span class="line"># Don&#39;t listen on a TCP&#x2F;IP port at all. This can be a security enhancement,</span><br><span class="line"># if all processes that need to connect to mysqld run on the same host.</span><br><span class="line"># All interaction with mysqld must be made via Unix sockets or named pipes.</span><br><span class="line"># Note that using this option without enabling named pipes on Windows</span><br><span class="line"># (via the &quot;enable-named-pipe&quot; option) will render mysqld useless!</span><br><span class="line"># </span><br><span class="line"># commented in by lampp security</span><br><span class="line">#skip-networking</span><br><span class="line">#skip-federated</span><br><span class="line"></span><br><span class="line"># Replication Master Server (default)</span><br><span class="line"># binary logging is required for replication</span><br><span class="line"># log-bin deactivated by default since XAMPP 1.4.11</span><br><span class="line">#log-bin&#x3D;mysql-bin</span><br><span class="line"></span><br><span class="line"># required unique id between 1 and 2^32 - 1</span><br><span class="line"># defaults to 1 if master-host is not set</span><br><span class="line"># but will not function as a master if omitted</span><br><span class="line">server-id   &#x3D; 1</span><br><span class="line"></span><br><span class="line"># Replication Slave (comment out master section to use this)</span><br><span class="line">#</span><br><span class="line"># To configure this host as a replication slave, you can choose between</span><br><span class="line"># two methods :</span><br><span class="line">#</span><br><span class="line"># 1) Use the CHANGE MASTER TO command (fully described in our manual) -</span><br><span class="line">#    the syntax is:</span><br><span class="line">#</span><br><span class="line">#    CHANGE MASTER TO MASTER_HOST&#x3D;&lt;host&gt;, MASTER_PORT&#x3D;&lt;port&gt;,</span><br><span class="line">#    MASTER_USER&#x3D;&lt;user&gt;, MASTER_PASSWORD&#x3D;&lt;password&gt; ;</span><br><span class="line">#</span><br><span class="line">#    where you replace &lt;host&gt;, &lt;user&gt;, &lt;password&gt; by quoted strings and</span><br><span class="line">#    &lt;port&gt; by the master&#39;s port number (3306 by default).</span><br><span class="line">#</span><br><span class="line">#    Example:</span><br><span class="line">#</span><br><span class="line">#    CHANGE MASTER TO MASTER_HOST&#x3D;&#39;125.564.12.1&#39;, MASTER_PORT&#x3D;3306,</span><br><span class="line">#    MASTER_USER&#x3D;&#39;joe&#39;, MASTER_PASSWORD&#x3D;&#39;secret&#39;;</span><br><span class="line">#</span><br><span class="line"># OR</span><br><span class="line">#</span><br><span class="line"># 2) Set the variables below. However, in case you choose this method, then</span><br><span class="line">#    start replication for the first time (even unsuccessfully, for example</span><br><span class="line">#    if you mistyped the password in master-password and the slave fails to</span><br><span class="line">#    connect), the slave will create a master.info file, and any later</span><br><span class="line">#    change in this file to the variables&#39; values below will be ignored and</span><br><span class="line">#    overridden by the content of the master.info file, unless you shutdown</span><br><span class="line">#    the slave server, delete master.info and restart the slaver server.</span><br><span class="line">#    For that reason, you may want to leave the lines below untouched</span><br><span class="line">#    (commented) and instead use CHANGE MASTER TO (see above)</span><br><span class="line">#</span><br><span class="line"># required unique id between 2 and 2^32 - 1</span><br><span class="line"># (and different from the master)</span><br><span class="line"># defaults to 2 if master-host is set</span><br><span class="line"># but will not function as a slave if omitted</span><br><span class="line">#server-id       &#x3D; 2</span><br><span class="line">#</span><br><span class="line"># The replication master for this slave - required</span><br><span class="line">#master-host     &#x3D;   &lt;hostname&gt;</span><br><span class="line">#</span><br><span class="line"># The username the slave will use for authentication when connecting</span><br><span class="line"># to the master - required</span><br><span class="line">#master-user     &#x3D;   &lt;username&gt;</span><br><span class="line">#</span><br><span class="line"># The password the slave will authenticate with when connecting to</span><br><span class="line"># the master - required</span><br><span class="line">#master-password &#x3D;   &lt;password&gt;</span><br><span class="line">#</span><br><span class="line"># The port the master is listening on.</span><br><span class="line"># optional - defaults to 3306</span><br><span class="line">#master-port     &#x3D;  &lt;port&gt;</span><br><span class="line">#</span><br><span class="line"># binary logging - not required for slaves, but recommended</span><br><span class="line">#log-bin&#x3D;mysql-bin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Point the following paths to different dedicated disks</span><br><span class="line">#tmpdir &#x3D; &quot;C:&#x2F;xampp&#x2F;tmp&quot;</span><br><span class="line">#log-update &#x3D; &#x2F;path-to-dedicated-directory&#x2F;hostname</span><br><span class="line"></span><br><span class="line"># Uncomment the following if you are using BDB tables</span><br><span class="line">#bdb_cache_size &#x3D; 4M</span><br><span class="line">#bdb_max_lock &#x3D; 10000</span><br><span class="line"></span><br><span class="line"># Comment the following if you are using InnoDB tables</span><br><span class="line">#skip-innodb</span><br><span class="line">innodb_data_home_dir &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&#x2F;data&quot;</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:10M:autoextend</span><br><span class="line">innodb_log_group_home_dir &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&#x2F;data&quot;</span><br><span class="line">#innodb_log_arch_dir &#x3D; &quot;C:&#x2F;xampp&#x2F;mysql&#x2F;data&quot;</span><br><span class="line">## You can set .._buffer_pool_size up to 50 - 80 %</span><br><span class="line">## of RAM but beware of setting memory usage too high</span><br><span class="line">innodb_buffer_pool_size &#x3D; 1000M</span><br><span class="line">innodb_additional_mem_pool_size &#x3D; 200M</span><br><span class="line">## Set .._log_file_size to 25 % of buffer pool size</span><br><span class="line">innodb_log_file_size &#x3D; 250M</span><br><span class="line">innodb_log_buffer_size &#x3D; 10M</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 50</span><br><span class="line"></span><br><span class="line">## UTF 8 Settings</span><br><span class="line">#init-connect&#x3D;\&#39;SET NAMES utf8\&#39;</span><br><span class="line">#collation_server&#x3D;utf8_unicode_ci</span><br><span class="line">#character_set_server&#x3D;utf8</span><br><span class="line">#skip-character-set-client-handshake</span><br><span class="line">#character_sets-dir&#x3D;&quot;C:&#x2F;xampp&#x2F;mysql&#x2F;share&#x2F;charsets&quot;</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet &#x3D; 16M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">no-auto-rehash</span><br><span class="line"># Remove the next comment character if you are not familiar with SQL</span><br><span class="line">#safe-updates</span><br><span class="line"></span><br><span class="line">[isamchk]</span><br><span class="line">key_buffer &#x3D; 20M</span><br><span class="line">sort_buffer_size &#x3D; 20M</span><br><span class="line">read_buffer &#x3D; 2M</span><br><span class="line">write_buffer &#x3D; 2M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer &#x3D; 20M</span><br><span class="line">sort_buffer_size &#x3D; 20M</span><br><span class="line">read_buffer &#x3D; 2M</span><br><span class="line">write_buffer &#x3D; 2M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Windows 安装 xampp 集成开发环境后，MySQL 语句查询异常缓慢，这里给出解决方法。&lt;/p&gt;</summary>
    
    
    
    <category term="软件使用" scheme="https://shangdev.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="MySQL" scheme="https://shangdev.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Error: Tablespace for table exists. Please DISCARD the tablespace before IMPORT</title>
    <link href="https://shangdev.github.io/2021/08/27/Error-Tablespace-for-table-exists-Please-DISCARD-the-tablespace-before-IMPORT/"/>
    <id>https://shangdev.github.io/2021/08/27/Error-Tablespace-for-table-exists-Please-DISCARD-the-tablespace-before-IMPORT/</id>
    <published>2021-08-27T07:17:41.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>有时候会发现某些表突然不见了，重建时又提示：Tablespace for table ‘’ exists. Please DISCARD the tablespace before IMPORT。</p><p>查看数据库目录时，发现仅有.idb文件。</p><p>做如下处理即可恢复正常：</p><p>例表：t_abc</p><ol><li><p>在数据库目录下复制其他表的.frm文件，并重命名为丢失表名称：例表：t_abc.frm；</p></li><li><p>执行SQL语句：DROP TABLE t_abc；</p></li></ol><p>再重新创建该表即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有时候会发现某些表突然不见了，重建时又提示：Tablespace for table ‘’ exists. Please DISCARD the tablespace before IMPORT。&lt;/p&gt;
&lt;p&gt;查看数据库目录时，发现仅有.idb文件。&lt;/p&gt;
&lt;p&gt;做如下</summary>
      
    
    
    
    <category term="数据库" scheme="https://shangdev.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://shangdev.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>phpoffice使用记录</title>
    <link href="https://shangdev.github.io/2021/07/21/phpoffice%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://shangdev.github.io/2021/07/21/phpoffice%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2021-07-21T05:56:26.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>phpoffice（包含PhpSpreadsheet和phpword）在使用过程中的问题记录。</p><a id="more"></a><h3 id="1-添加图像至Excel"><a href="#1-添加图像至Excel" class="headerlink" title="1. 添加图像至Excel"></a>1. 添加图像至Excel</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$drawing &#x3D; new \PhpOffice\PhpSpreadsheet\Worksheet\Drawing();</span><br><span class="line">$drawing-&gt;setName(&#39;Logo&#39;);</span><br><span class="line">$drawing-&gt;setDescription(&#39;Logo&#39;);</span><br><span class="line">$drawing-&gt;setPath(&#39;.&#x2F;images&#x2F;officelogo.jpg&#39;);</span><br><span class="line">$drawing-&gt;setHeight(36);</span><br><span class="line">$drawing-&gt;setCoordinates(&#39;B15&#39;);</span><br><span class="line">$drawing-&gt;setWorksheet($spreadsheet-&gt;getActiveSheet());</span><br></pre></td></tr></table></figure><p>需要注意图片名不能包含中文，否则生成的 Excel 不能正常显示图片。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;phpoffice（包含PhpSpreadsheet和phpword）在使用过程中的问题记录。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="https://shangdev.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="PHP" scheme="https://shangdev.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>php将word或excel转pdf</title>
    <link href="https://shangdev.github.io/2021/07/21/PHP%E5%B0%86Word%E6%88%96Excel%E8%BD%ACPDF/"/>
    <id>https://shangdev.github.io/2021/07/21/PHP%E5%B0%86Word%E6%88%96Excel%E8%BD%ACPDF/</id>
    <published>2021-07-21T01:03:46.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>本文将介绍如何在PHP中调用 Windows Office 接口将 Word 或 Excel 转为PDF格式。</p><p>仅适用于 Windows 系统，如果是 Linux 可通过 Libreoffice 来实现。</p><a id="more"></a><h1 id="配置-PHP-环境"><a href="#配置-PHP-环境" class="headerlink" title="配置 PHP 环境"></a>配置 PHP 环境</h1><p>首先开启 PHP 扩展 com_dotnet，编辑 php.ini 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">com.allow_dcom &#x3D; true</span><br><span class="line">extension&#x3D;php_com_dotnet.dll</span><br></pre></td></tr></table></figure><p>搜索 disable_classes，如果有 com 则移除。</p><p>重启 PHP。</p><h1 id="Excel-转-PDF"><a href="#Excel-转-PDF" class="headerlink" title="Excel 转 PDF"></a>Excel 转 PDF</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 文件路径，函数 realpath 可获取。</span><br><span class="line">$allsheets &#x3D; 1; &#x2F;&#x2F; 导出所有sheet or 当前sheet</span><br><span class="line">$inpath &#x3D; &#39;D:&#x2F;abc.xlsx&#39;; &#x2F;&#x2F; 要转换的 XLSX 文件路径</span><br><span class="line">$outpath &#x3D; &#39;D:&#x2F;abc.pdf&#39;; &#x2F;&#x2F; 转换后的 PDF 路径</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">    $excel &#x3D; new \COM(&#39;Excel.Application&#39;) or die (&quot;Error: Could not windows excel Object.&quot;);</span><br><span class="line">    $excel-&gt;Visible &#x3D; 0;</span><br><span class="line">    $excel-&gt;Workbooks-&gt;Open($inpath) or die(&quot;ERROR: Unable to open $basename&quot;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 存在就删除</span><br><span class="line">    if (file_exists($outpath)) &#123;</span><br><span class="line">        unlink($outpath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($allsheets) &#123;</span><br><span class="line">        $excel-&gt;ActiveWorkbook-&gt;ExportAsFixedFormat(0, $outpath, 0);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $excel-&gt;ActiveSheet-&gt;ExportAsFixedFormat(0, $outpath, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $excel-&gt;Quit();</span><br><span class="line">    unset($excel);</span><br><span class="line"></span><br><span class="line">    return $outpath;</span><br><span class="line">&#125; catch (\Exception $ex) &#123;</span><br><span class="line">    $excel-&gt;Quit();</span><br><span class="line">    return mb_convert_encoding($ex-&gt;getMessage(), &#39;UTF-8&#39;, &#39;GBK&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Word-转-PDF"><a href="#Word-转-PDF" class="headerlink" title="Word 转 PDF"></a>Word 转 PDF</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 文件路径</span><br><span class="line">$inpath &#x3D; &#39;D:&#x2F;abc.docx&#39;; &#x2F;&#x2F; 要转换的 WORD 文件路径</span><br><span class="line">$outpath &#x3D; &#39;D:&#x2F;abc.pdf&#39;; &#x2F;&#x2F; 转换后的 PDF 路径</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">    $word &#x3D; new \COM(&#39;Word.Application&#39;) or die (&quot;Error: Could not windows excel Object.&quot;);</span><br><span class="line">    $word-&gt;Visible &#x3D; 0;</span><br><span class="line">    $word-&gt;DisplayAlerts &#x3D; 0;</span><br><span class="line">    $word-&gt;Documents-&gt;Open($inpath) or die(&quot;ERROR: Unable to open $basename&quot;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;存在就删除</span><br><span class="line">    if (file_exists($outpath)) &#123;</span><br><span class="line">        unlink($outpath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $word-&gt;ActiveDocument-&gt;ExportAsFixedFormat($outpath, 17);</span><br><span class="line">    $word-&gt;Quit();</span><br><span class="line">    unset($word);</span><br><span class="line"></span><br><span class="line">    return $outpath;</span><br><span class="line">&#125; catch (\Exception $ex) &#123;</span><br><span class="line">    $word-&gt;Quit();</span><br><span class="line">    return mb_convert_encoding($ex-&gt;getMessage(), &#39;UTF-8&#39;, &#39;GBK&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="重要提示"><a href="#重要提示" class="headerlink" title="重要提示"></a>重要提示</h1><ul><li>Windows 返回的错误为 GBK 编码，需转为 UTF-8 编码：mb_convert_encoding()；</li><li>如果文件名包含中文，则需要转码为 GBK，否则无法 Open 文件；</li><li>参考文档：<a href="https://docs.microsoft.com/zh-cn/office/vba/api/overview/">https://docs.microsoft.com/zh-cn/office/vba/api/overview/</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文将介绍如何在PHP中调用 Windows Office 接口将 Word 或 Excel 转为PDF格式。&lt;/p&gt;
&lt;p&gt;仅适用于 Windows 系统，如果是 Linux 可通过 Libreoffice 来实现。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="https://shangdev.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="PHP" scheme="https://shangdev.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>ExtJS4.2.1 使用技巧</title>
    <link href="https://shangdev.github.io/2021/07/05/ExtJS4-2-1-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://shangdev.github.io/2021/07/05/ExtJS4-2-1-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2021-07-05T03:29:55.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>ExtJS4.2.1使用技巧。</p><a id="more"></a><h3 id="重要提示"><a href="#重要提示" class="headerlink" title="重要提示"></a>重要提示</h3><ul><li><p>trigger 字段内 Ext.window.Window border布局禁止将items内Grid或Tree的创建放到 onTriggerClick 之外。</p></li><li><p>Dialog Border 布局中不要将 Panel 的创建放到 initComponent 之外（可通过 getCmp 获取）。</p></li></ul><h3 id="1-通过ID获取DOM，其中-mb2-为ID名称："><a href="#1-通过ID获取DOM，其中-mb2-为ID名称：" class="headerlink" title="1. 通过ID获取DOM，其中 mb2 为ID名称："></a>1. 通过ID获取DOM，其中 mb2 为ID名称：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ext.get(&#39;mb2&#39;).on(&#39;click&#39;, function(e)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="2-Grid-actioncolumn-handler-列参数："><a href="#2-Grid-actioncolumn-handler-列参数：" class="headerlink" title="2. Grid actioncolumn handler 列参数："></a>2. Grid actioncolumn handler 列参数：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    xtype: &quot;actioncolumn&quot;,</span><br><span class="line">    items: [&#123;</span><br><span class="line">        icon: &quot;Public&#x2F;Images&#x2F;icons&#x2F;approval.png&quot;,</span><br><span class="line">        handler: function(view, rowIndex, colIndex, item, e, record)&#123;&#125;,</span><br><span class="line">        scope: me</span><br><span class="line">    &#125;],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-Grid-右键菜单"><a href="#3-Grid-右键菜单" class="headerlink" title="3. Grid 右键菜单"></a>3. Grid 右键菜单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">var contextMenu &#x3D; Ext.create(&#39;Ext.menu.Menu&#39;, &#123;</span><br><span class="line">    width: 100,</span><br><span class="line">    items: [&#123;</span><br><span class="line">        text: &#39;Menu_1&#39;,</span><br><span class="line">        iconCls: &quot;PSI-button-insertBefore&quot;,</span><br><span class="line">        handler: function() &#123;</span><br><span class="line">          alert(1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">var grid &#x3D; Ext.create(&quot;Ext.tree.Panel&quot;, &#123;</span><br><span class="line">    listeners: &#123;</span><br><span class="line">        itemcontextmenu: function (grid, record, item, index, e) &#123;</span><br><span class="line">            e.stopEvent();</span><br><span class="line">            contextMenu.showAt(e.getXY());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="4-多附件上传"><a href="#4-多附件上传" class="headerlink" title="4. 多附件上传"></a>4. 多附件上传</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    xtype: &#39;filefield&#39;,</span><br><span class="line">    listeners: &#123;</span><br><span class="line">        afterrender:function(fb)&#123;</span><br><span class="line">            fb.fileInputEl.set(&#123;</span><br><span class="line">                multiple: &#39;multiple&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        change: function (fb, v) &#123;</span><br><span class="line">            var formData &#x3D; new FormData();</span><br><span class="line">            var files &#x3D; fb.fileInputEl.dom.files;</span><br><span class="line">            for (var i &#x3D; 0; i &lt; files.length; i++) &#123;</span><br><span class="line">                formData.append(&#39;file[]&#39;, files[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-Numberfield"><a href="#5-Numberfield" class="headerlink" title="5. Numberfield"></a>5. Numberfield</h3><p>监听事件  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    xtype: &#39;numberfield&#39;,</span><br><span class="line">    listeners: &#123;</span><br><span class="line">        change:function(field, newVal, oldVal)&#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显示格式  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    format:&#39;0.0000&#39;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑小数位  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    editor: &#123;</span><br><span class="line">        xtype: &quot;numberfield&quot;,</span><br><span class="line">        decimalPrecision: 4</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-Form-字段-placeholder属性"><a href="#6-Form-字段-placeholder属性" class="headerlink" title="6. Form 字段 placeholder属性"></a>6. Form 字段 placeholder属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    xtype: &#39;textfield&#39;,</span><br><span class="line">    emptyText: &#39;这里输入placeholder属性值&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-Grid列锁定后鼠标上下滚动困难"><a href="#7-Grid列锁定后鼠标上下滚动困难" class="headerlink" title="7. Grid列锁定后鼠标上下滚动困难"></a>7. Grid列锁定后鼠标上下滚动困难</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 添加属性至Ext.grid.Panel中</span><br><span class="line">onLockedViewScroll: Ext.emptyFn,</span><br></pre></td></tr></table></figure><h3 id="8-Tree-选中节点"><a href="#8-Tree-选中节点" class="headerlink" title="8. Tree 选中节点"></a>8. Tree 选中节点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var grid &#x3D; ...;</span><br><span class="line">var node &#x3D; grid.getStore().getNodeById(&#39;id&#39;);</span><br><span class="line">grid.getSelectionModel().select(node);</span><br></pre></td></tr></table></figure><h3 id="9-Grid-单击事件"><a href="#9-Grid-单击事件" class="headerlink" title="9. Grid 单击事件"></a>9. Grid 单击事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ext.create(&quot;Ext.grid.Panel&quot;, &#123;</span><br><span class="line">    listeners: &#123;</span><br><span class="line">        click: function (grid, dom, cellIndex, colIndex, tr, record) &#123;</span><br><span class="line">            &#x2F;&#x2F; ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="10-Combo-Combobox-绑定-Store"><a href="#10-Combo-Combobox-绑定-Store" class="headerlink" title="10. Combo|Combobox 绑定 Store"></a>10. Combo|Combobox 绑定 Store</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var field &#x3D; Ext.getCmp(&#39;XXX&#39;);</span><br><span class="line">field.bindStore(Ext.create(&quot;Ext.data.ArrayStore&quot;, &#123;</span><br><span class="line">    fields: [&quot;id&quot;, &quot;name&quot;],</span><br><span class="line">    data: []</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><h3 id="11-禁用分页参数"><a href="#11-禁用分页参数" class="headerlink" title="11. 禁用分页参数"></a>11. 禁用分页参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">proxy: &#123;</span><br><span class="line">    getParams: Ext.emptyFn,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12-下拉框数据远程获取"><a href="#12-下拉框数据远程获取" class="headerlink" title="12. 下拉框数据远程获取"></a>12. 下拉框数据远程获取</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    xtype: &#39;combobox&#39;,</span><br><span class="line">    queryMode: &quot;remote&quot;,</span><br><span class="line">    editable: false,</span><br><span class="line">    valueField: &quot;value&quot;,</span><br><span class="line">    displayField: &quot;label&quot;,</span><br><span class="line">    store: Ext.create(&#39;Ext.data.Store&#39;, &#123;</span><br><span class="line">        fields: [</span><br><span class="line">            &#123;name: &#39;label&#39;, type: &#39;string&#39;&#125;,</span><br><span class="line">            &#123;name: &#39;value&#39;, type: &#39;string&#39;&#125;</span><br><span class="line">        ],</span><br><span class="line">        data: [],</span><br><span class="line">        proxy: &#123;</span><br><span class="line">            type: &#39;ajax&#39;,</span><br><span class="line">            url: &#39;&#39;,</span><br><span class="line">            getParams: Ext.emptyFn</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-form-field-字段鼠标悬浮提示"><a href="#13-form-field-字段鼠标悬浮提示" class="headerlink" title="13. form field 字段鼠标悬浮提示"></a>13. form field 字段鼠标悬浮提示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    inputAttrTpl: &quot; data-qtip&#x3D;&#39;This is my quick tip!&#39; &quot;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-Grid-标题动态更新"><a href="#14-Grid-标题动态更新" class="headerlink" title="14. Grid 标题动态更新"></a>14. Grid 标题动态更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var columns &#x3D; me.getGoodsGrid().getView().getHeaderCt().getGridColumns();</span><br><span class="line">Ext.each(columns, function (col) &#123;</span><br><span class="line">    if (col.text &#x3D;&#x3D;&#x3D; &quot;备料数量&quot;) &#123;</span><br><span class="line">        col.setText(&quot;出库数量&quot;);</span><br><span class="line">    &#125; else if (col.text &#x3D;&#x3D;&#x3D; &#39;已出库数量&#39;) &#123;</span><br><span class="line">        col.setVisible(false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="15-Ext-window-Window-组件-buttons-获取-items-下的-form-组件"><a href="#15-Ext-window-Window-组件-buttons-获取-items-下的-form-组件" class="headerlink" title="15. Ext.window.Window 组件 buttons 获取 items 下的 form 组件"></a>15. Ext.window.Window 组件 buttons 获取 items 下的 form 组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Ext.create(&quot;Ext.window.Window&quot;, &#123;</span><br><span class="line">    ...</span><br><span class="line">    items: Ext.widget(&quot;form&quot;, &#123;</span><br><span class="line">        items: [</span><br><span class="line">            ...</span><br><span class="line">        ],</span><br><span class="line">    &#125;),</span><br><span class="line">    buttons: [&#123;</span><br><span class="line">        text: &#39;提交&#39;,</span><br><span class="line">        handler: function () &#123;</span><br><span class="line">            var thisForm &#x3D; this.up(&quot;window&quot;).down(&quot;form&quot;).getForm();</span><br><span class="line">            if (thisForm.isValid()) &#123;</span><br><span class="line">                ...</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="16-Tree-select-事件"><a href="#16-Tree-select-事件" class="headerlink" title="16. Tree select 事件"></a>16. Tree select 事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Ext.create(&#39;Ext.tree.Panel&#39;, &#123;</span><br><span class="line">    store: store,</span><br><span class="line">    border: 0,</span><br><span class="line">    flex: 1,</span><br><span class="line">    rootVisible: false,</span><br><span class="line">    useArrows: true,</span><br><span class="line">    listeners: &#123;</span><br><span class="line">        select: &#123;</span><br><span class="line">            fn: function (rowModel, record) &#123;</span><br><span class="line">                &#x2F;&#x2F; 判断节点是否已经展开，没有则展开</span><br><span class="line">                if (!record.isExpanded()) &#123;</span><br><span class="line">                    record.expand();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            scope: me</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="17-combobox-多选-picker-实现"><a href="#17-combobox-多选-picker-实现" class="headerlink" title="17. combobox 多选 picker 实现"></a>17. combobox 多选 picker 实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    xtype: &#39;combobox&#39;,</span><br><span class="line">    name: &#39;type&#39;,</span><br><span class="line">    fieldLabel: &#39;更改类别&#39;,</span><br><span class="line">    labelAlign: &quot;right&quot;,</span><br><span class="line">    labelSeparator: &quot;&quot;,</span><br><span class="line">    labelWidth: 80,</span><br><span class="line">    editable: false,</span><br><span class="line">    margin: &quot;5, 0, 0, 0&quot;,</span><br><span class="line">    multiSelect: true,</span><br><span class="line">    createPicker: function () &#123;</span><br><span class="line">        var self &#x3D; this;</span><br><span class="line">        var store &#x3D; new Ext.data.TreeStore(&#123;</span><br><span class="line">            fields: [&#39;id&#39;, &#39;text&#39;],</span><br><span class="line">            autoLoad: true,</span><br><span class="line">            autoDestroy: true,</span><br><span class="line">            proxy: &#123;</span><br><span class="line">                type: &#39;ajax&#39;,</span><br><span class="line">                actionMethods: &#123;</span><br><span class="line">                    read: &#39;POST&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">                url: me.URL(&#39;xxx&#x2F;xx&#x2F;xx&#39;)</span><br><span class="line">            &#125;,</span><br><span class="line">            root: &#123;</span><br><span class="line">                expanded: true,</span><br><span class="line">                children: []</span><br><span class="line">            &#125;,</span><br><span class="line">            listeners: &#123;</span><br><span class="line">                beforeload: function (store, eOpts) &#123;</span><br><span class="line">                    self.getEl().mask(&quot;加载中...&quot;);</span><br><span class="line">                &#125;,</span><br><span class="line">                load: function (store, eOpts) &#123;</span><br><span class="line">                    self.getEl().unmask();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        var picker &#x3D; new Ext.tree.Panel(&#123;</span><br><span class="line">            xtype: &#39;check-tree&#39;,</span><br><span class="line">            width: 100,</span><br><span class="line">            height: &#39;auto&#39;,</span><br><span class="line">            store: store,</span><br><span class="line">            pickerField: self,</span><br><span class="line">            rootVisible: false,</span><br><span class="line">            floating: true,</span><br><span class="line">            hidden: true,</span><br><span class="line">            checkable: true,</span><br><span class="line">            checkModel: &#39;cascade&#39;,</span><br><span class="line">            triggerOnClick: true,</span><br><span class="line">            viewConfig: &#123;</span><br><span class="line">                focusOnToFront: true</span><br><span class="line">            &#125;,</span><br><span class="line">            border: 0,</span><br><span class="line">            cls: &#39;PSI-Msgbx-tip&#39;,</span><br><span class="line">            listeners: &#123;</span><br><span class="line">                scope: self,</span><br><span class="line">                itemclick: function (view, record, node, rowIndex, e) &#123;</span><br><span class="line">                    record.set(&#39;checked&#39;, !record.get(&#39;checked&#39;));</span><br><span class="line"></span><br><span class="line">                    &#x2F;&#x2F; 获取当前选中的所有节点</span><br><span class="line">                    var checkedNodes &#x3D; picker.getChecked(),</span><br><span class="line">                        nodeTexts &#x3D; [];</span><br><span class="line">                    Ext.Array.each(checkedNodes, function(node) &#123;</span><br><span class="line">                        nodeTexts.push(node.get(&#39;text&#39;));</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">                    &#x2F;&#x2F; 设置combobox的值为所有选中节点的文本</span><br><span class="line">                    self.setValue(nodeTexts.join(&#39;, &#39;));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            buttons: [&#123;</span><br><span class="line">                text: &#39;确定&#39;,</span><br><span class="line">                handler: function() &#123;</span><br><span class="line">                    self.collapse();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        self.mon(picker, &#123;</span><br><span class="line">            show: function () &#123;</span><br><span class="line">                store.load();</span><br><span class="line">            &#125;,</span><br><span class="line">            afteritemexpand: self.alignPicker,</span><br><span class="line">            afteritemcollapse: self.alignPicker,</span><br><span class="line">            scope: self</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        return picker;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="18-动态添加Grid列"><a href="#18-动态添加Grid列" class="headerlink" title="18. 动态添加Grid列"></a>18. 动态添加Grid列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var gridView &#x3D; me.getMainGrid();</span><br><span class="line">var store &#x3D; gridView.getStore();</span><br><span class="line">var fields &#x3D; [];</span><br><span class="line">store.model.getFields().map(function (item) &#123; fields.push(item.name) &#125;);</span><br><span class="line">for (var i &#x3D; 0; i &lt; newColumns.length; i++) &#123;</span><br><span class="line">    gridView.headerCt.insert(gridView.columns.length, Ext.create(&#39;Ext.grid.column.Column&#39;, newColumns[i]));</span><br><span class="line">    fields.push(newColumns[i].dataIndex);</span><br><span class="line">&#125;</span><br><span class="line">store.model.setFields(fields, null, null);</span><br><span class="line">gridView.getView().refresh();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;ExtJS4.2.1使用技巧。&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="https://shangdev.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="ExtJS" scheme="https://shangdev.github.io/tags/ExtJS/"/>
    
  </entry>
  
  <entry>
    <title>云服务器安全防护指南</title>
    <link href="https://shangdev.github.io/2020/12/01/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E6%8C%87%E5%8D%97/"/>
    <id>https://shangdev.github.io/2020/12/01/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E6%8C%87%E5%8D%97/</id>
    <published>2020-12-01T02:21:57.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>云服务器安全防护不容小觑，本篇文章就从SSH默认端口修改、禁止root用户登录、修改最大进程数、auditd审计、fail2ban来设置一些基础的防护措施。</p><a id="more"></a><h3 id="新增用户"><a href="#新增用户" class="headerlink" title="新增用户"></a>新增用户</h3><p>禁止root用户登录前需要先新建一个用户，否则没有可用于登录的用户，只能重装系统了。</p><p>新建dev用户并设置密码：<a href="https://suijimimashengcheng.51240.com/">高强度密码生成</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd dev</span><br><span class="line">passwd dev</span><br></pre></td></tr></table></figure><p>授予root权限，在 <code>/etc/sudoers</code> 文件中找到 <code>root ALL=(ALL) ALL</code> 行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;sudoers</span><br><span class="line"></span><br><span class="line"># 新增dev用户root权限</span><br><span class="line">root    ALL&#x3D;(ALL)     ALL</span><br><span class="line">tommy   ALL&#x3D;(ALL)     ALL</span><br></pre></td></tr></table></figure><h3 id="修改ssh端口及禁止root用户登录"><a href="#修改ssh端口及禁止root用户登录" class="headerlink" title="修改ssh端口及禁止root用户登录"></a>修改ssh端口及禁止root用户登录</h3><p>然后我们修改ssh登录端口，以及禁止root用户登录，打开编辑文件 <code>vi /etc/ssh/ssh_config</code>：</p><p>取消 #Port 前的 # 注释，将 22 修改为 18222（其中18222可修改为其他数，范围在 0 ~ 65535）。</p><p>接着把 <code>PermitRootLogin yes</code> 修改为 <code>PermitRootLogin no</code> 来禁止root用户登录。 </p><p>然后重启 ssh 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;sshd restart</span><br></pre></td></tr></table></figure><p>同时还要注意<strong>服务器防火墙</strong>以及<strong>云服务商安全组</strong>的放行。</p><h3 id="修改最大进程数"><a href="#修改最大进程数" class="headerlink" title="修改最大进程数"></a>修改最大进程数</h3><p>关于最大进程数，是曾经掉过这个坑，导致服务器无法登录，所以事先修改最大进程数还是很有必要的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;kernel.pid_max&#x3D;1000000 &quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>查看当前进程数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -eLf | wc -l</span><br></pre></td></tr></table></figure><h3 id="fail2ban"><a href="#fail2ban" class="headerlink" title="fail2ban"></a>fail2ban</h3><p>fail2ban 可阻止暴力破解、恶意扫描，以及CC攻击。</p><p>centos下安装 fail2ban <code>yum install fail2ban -y</code></p><p>ubuntu下安装 fail2ban <code>apt-get install fail2ban</code></p><p>查看fail2ban运行状态 <code>fail2ban-client status</code></p><p>其中 Jail list 显示当前已启用的 Jail。我们可以在 <code>/etc/fail2ban</code> 下对 fail2ban 进行一些设置。</p><p>首先新增自定义配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;fail2ban</span><br><span class="line">vi fail2ban.local</span><br></pre></td></tr></table></figure><p>文件中新增自定义 Jail 块，如deny-badcrawl：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[deny-badcrawl]</span><br><span class="line">enabled &#x3D; true</span><br><span class="line">port &#x3D; http,https</span><br><span class="line">filter &#x3D; deny-badcrawl</span><br><span class="line">action &#x3D; iptables[name&#x3D;Http, port&#x3D;80, protocol&#x3D;tcp]</span><br><span class="line">action &#x3D; iptables[name&#x3D;Https, port&#x3D;443, protocol&#x3D;tcp]</span><br><span class="line">logpath &#x3D; &#x2F;home&#x2F;wwwlogs&#x2F;*.log</span><br><span class="line">maxretry &#x3D; 4</span><br><span class="line">findtime &#x3D; 3600</span><br><span class="line">bantime &#x3D; 3600</span><br><span class="line">#ignoreip &#x3D; 127.0.0.1</span><br></pre></td></tr></table></figure><p>然后我们新增上面配置中 filter 项对应的文件，进入 filter.d 目录 <code>cd /etc/fail2ban/filter.d</code>，新增文件 <code>vi deny-badcrawl.conf</code>，写入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Definition]</span><br><span class="line">failregex &#x3D; &lt;HOST&gt; -.*- .*HTTP&#x2F;1.* 404 .*$</span><br><span class="line">ignoreregex &#x3D;</span><br></pre></td></tr></table></figure><p>这样，fail2ban 就会在 <code>/home/wwwroot/*.log</code> 日志文件中匹配 failregex 中规则 <code>&lt;HOST&gt; -.*- .*HTTP/1.* 404 .*$</code> 的字符串，提取其中的 IP 地址，如果该IP地址在 3600 秒（对应配置中的 findtime）内访问失败超过 4 次（对应配置中的 maxretry），将被封禁 3600 秒（对应配置中的 bantime）。</p><p>同时我们可以这样检测设置的正则 failregex 是否起作用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-regex &#x2F;home&#x2F;wwwlogs&#x2F;access.log &#x2F;etc&#x2F;fail2ban&#x2F;filter.d&#x2F;deny-badcrawl.conf</span><br></pre></td></tr></table></figure><p>查看当前被封禁的IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure><p>解封指定的IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client set deny-badcrawl unbanip 8.8.8.8</span><br></pre></td></tr></table></figure><p>一些其他命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service fail2ban start</span><br><span class="line">service fail2ban stop</span><br><span class="line">service fail2ban restart</span><br></pre></td></tr></table></figure><p>设置开机启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># centos6</span><br><span class="line">chkconfig fail2ban on</span><br><span class="line"></span><br><span class="line"># centos7</span><br><span class="line">systemctl enable fail2ban</span><br></pre></td></tr></table></figure><h3 id="auditd审计"><a href="#auditd审计" class="headerlink" title="auditd审计"></a>auditd审计</h3><p>Linux中有一个auditd审计程序，我的云服务器是centos7系统，自带了这个程序，这里主要讲如何使用。</p><p>查看当前审计规则 <code>auditctl -l</code>，显示 no rules 表示当前没有审计规则。</p><p>我们来新增一条规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auditctl -w &#x2F;var&#x2F;www&#x2F;index.txt -p rwxa -k www</span><br></pre></td></tr></table></figure><p>其中</p><ul><li><p>-w 指定文件/夹路径</p></li><li><p>-p 指出发审计的访问权限：r-读取、w-写入、x-执行、a-属性</p></li><li><p>-k 指定关键词（可用于查询过滤）</p></li></ul><p>为了便于测试，我们对 /var/www/index.txt 执行写入操作，然后查看审计记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ausearch -k www</span><br></pre></td></tr></table></figure><p>其中 -k 是新增规则中指定的过滤关键字。</p><p>现在，确认了以上审计规则可正常规则，就可以写入 auditd 规则配置文件中，因为上述的测试是临时规则，即重启 auditd 审计程序后就会消失。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;audit&#x2F;audit.rules</span><br><span class="line">-w &#x2F;var&#x2F;www&#x2F;index.txt -p rwxa -k www</span><br></pre></td></tr></table></figure><p>保存配置文件后重启 auditd 审计程序 <code>/etc/init.d/auditd restart</code></p><p>这样就完成了一条审计规则的创建。</p><p>如果想查看授权失败的审计事件，使用 <code>aureport -au</code>。</p><p>如果想查看所有用户相关的审计事件，使用 <code>aureport -m</code>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;云服务器安全防护不容小觑，本篇文章就从SSH默认端口修改、禁止root用户登录、修改最大进程数、auditd审计、fail2ban来设置一些基础的防护措施。&lt;/p&gt;</summary>
    
    
    
    <category term="运维相关" scheme="https://shangdev.github.io/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Linux" scheme="https://shangdev.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>如何安装nginx防火墙ngx_lua_waf？</title>
    <link href="https://shangdev.github.io/2020/11/21/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85nginx%E9%98%B2%E7%81%AB%E5%A2%99ngx-lua-waf%EF%BC%9F/"/>
    <id>https://shangdev.github.io/2020/11/21/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85nginx%E9%98%B2%E7%81%AB%E5%A2%99ngx-lua-waf%EF%BC%9F/</id>
    <published>2020-11-21T15:31:25.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>ngx_lua_waf是一个基于ngx_lua的web应用防火墙，默认规则有防sql注入、防webshell上传、屏蔽异常网络请求等功能，也可以自定义规则。</p><a id="more"></a><p>首先安装Nginx模块ngx_lua，以lnmp一键安装包为例，新增Nginx模块操作如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 1.修改lnmp安装包下 lnmp.conf 文件 Enable_Nginx_Lua 后面 n 改成 y 保存</span><br><span class="line"># 2.升级nginx，输入当前版本号或更新的nginx版本号（注意先备份Nginx网站配置文件）</span><br><span class="line">.&#x2F;upgrade.sh nginx</span><br></pre></td></tr></table></figure><p>其次安装ngx_lua_waf，下载地址：<a href="https://github.com/loveshell/ngx_lua_waf">https://github.com/loveshell/ngx_lua_waf</a>，安装步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 假设Nginx配置路径如下：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;</span><br><span class="line"></span><br><span class="line"># 1. 在conf目录下新增waf目录，把ngx_lua_waf解压至waf目录下</span><br><span class="line"># 2. 在nginx.conf的http段添加：</span><br><span class="line">lua_package_path &quot;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;waf&#x2F;?.lua&quot;;</span><br><span class="line">lua_shared_dict limit 10m;</span><br><span class="line">init_by_lua_file  &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;waf&#x2F;init.lua; </span><br><span class="line">access_by_lua_file &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;waf&#x2F;waf.lua;</span><br><span class="line"></span><br><span class="line"># 3. 新增ngx_lua_waf拦截日志（在Nginx安装目录下的logs文件夹下）：</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs</span><br><span class="line">sudo mkdir waf</span><br><span class="line">sudo chown www:www waf # 其中www:www为Nginx运行用户组</span><br><span class="line"></span><br><span class="line"># 4. 重启Nginx生效</span><br><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><p>参考链接：<br><a href="https://github.com/loveshell/ngx_lua_waf">https://github.com/loveshell/ngx_lua_waf</a><br><a href="https://bbs.vpser.net/forum.php?mod=viewthread&amp;tid=18287&amp;highlight=lua">https://bbs.vpser.net/forum.php?mod=viewthread&amp;tid=18287&amp;highlight=lua</a><br><a href="https://lnmp.org/faq/lnmp1-2-upgrade.html">https://lnmp.org/faq/lnmp1-2-upgrade.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ngx_lua_waf是一个基于ngx_lua的web应用防火墙，默认规则有防sql注入、防webshell上传、屏蔽异常网络请求等功能，也可以自定义规则。&lt;/p&gt;</summary>
    
    
    
    <category term="运维相关" scheme="https://shangdev.github.io/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Nginx" scheme="https://shangdev.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Npm install failed “cannot run in wd” 错误</title>
    <link href="https://shangdev.github.io/2019/01/31/Npm-install-failed-%E2%80%9Ccannot-run-in-wd%E2%80%9D-%E9%94%99%E8%AF%AF/"/>
    <id>https://shangdev.github.io/2019/01/31/Npm-install-failed-%E2%80%9Ccannot-run-in-wd%E2%80%9D-%E9%94%99%E8%AF%AF/</id>
    <published>2019-01-31T16:53:46.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>使用 npm install 时，出现了 “cannot run in wd” 等字样时，需要加上 –unsafe-perm 参数，完整如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --unsafe-perm</span><br></pre></td></tr></table></figure><p>官方解释：</p><blockquote><p>If npm was invoked with root privileges, then it will change the uid to the user account or uid specified by the user config, which defaults to nobody. Set the unsafe-perm flag to run scripts with root privileges.</p></blockquote><p>参考链接：<a href="https://blog.csdn.net/zgljl2012/article/details/52047339">npm install failed “cannot run in wd”</a>  </p><p>【测试actions】</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用 npm install 时，出现了 “cannot run in wd” 等字样时，需要加上 –unsafe-perm 参数，完整如下：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="前端" scheme="https://shangdev.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Npm" scheme="https://shangdev.github.io/tags/Npm/"/>
    
  </entry>
  
  <entry>
    <title>Let’s Encrypt 证书指南</title>
    <link href="https://shangdev.github.io/2019/01/31/Letsencrypt-%E8%AF%81%E4%B9%A6%E6%8C%87%E5%8D%97/"/>
    <id>https://shangdev.github.io/2019/01/31/Letsencrypt-%E8%AF%81%E4%B9%A6%E6%8C%87%E5%8D%97/</id>
    <published>2019-01-31T16:21:48.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>现在，Letsencrypt 支持通配符证书申请了。</p><a id="more"></a><h1 id="证书申请"><a href="#证书申请" class="headerlink" title="证书申请"></a>证书申请</h1><p>首先，获取 <a href="https://certbot.eff.org/">Certbot</a> 客户端：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://dl.eff.org/certbot-auto</span><br><span class="line">$ chmod a+x certbot-auto</span><br></pre></td></tr></table></figure><p>接着，使用 Certbot 客户端申请证书，使用 dns-01 方式，替换掉下方 *.xxx.com 为待申请证书的域名。</p><p>需要注意的是，如果申请单域名证书，直接替换为要申请证书的域名；如果申请的是泛域名证书，替换格式为 “*.xxx.com”。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./certbot-auto certonly  -d <span class="string">&quot;*.xxx.com&quot;</span> --manual --preferred-challenges dns-01  --server https://acme-v02.api.letsencrypt.org/directory</span><br></pre></td></tr></table></figure><p>根据命令行的提示，输入对应的信息，在 “Please deploy a DNS TXT record under the name …” 这一步暂停一下，到域名解析那里添加提示的 TXT 记录。</p><p>检查本地检查记录是否已生效：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dig -t txt _acme-challenge.xxx.com @8.8.8.8</span><br></pre></td></tr></table></figure><p>如果解析已生效，继续回到命令行，按回车键继续。不出意外，在短暂的验证后，会出现 Congratulations 的字样，表明证书申请成果。</p><p>生成的证书存放目录结构如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tree /etc/letsencrypt/live/xxx.com/</span><br><span class="line">├── cert.pem</span><br><span class="line">├── chain.pem</span><br><span class="line">├── fullchain.pem</span><br><span class="line">└── privkey.pem</span><br></pre></td></tr></table></figure><h1 id="证书续期"><a href="#证书续期" class="headerlink" title="证书续期"></a>证书续期</h1><p>Let’s encrypt 证书有效期为90天，到期前会自动邮件（邮件为申请证书时填写的邮件）提示进行续期，续期命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ certbot-auto renew</span><br></pre></td></tr></table></figure><p>需要注意的是，通过 dns-01 方式，上面这条命令会报错。所以，我们直接执行初始的申请命令，即：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./certbot-auto certonly  -d <span class="string">&quot;*.xxx.com&quot;</span> --manual --preferred-challenges dns-01  --server https://acme-v02.api.letsencrypt.org/directory</span><br></pre></td></tr></table></figure><p>这样，新的证书就申请下来了。</p><h1 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ server &#123;</span><br><span class="line">$   listen 443 ssl;</span><br><span class="line">$   server_name *.xxx.com;</span><br><span class="line">$</span><br><span class="line">$   ssl on;</span><br><span class="line">$   ssl_certificate /etc/cert/xxx.com/fullchain.pem;</span><br><span class="line">$   ssl_certificate_key /etc/cert/xxx.com/privkey.pem;</span><br><span class="line">$   ssl_trusted_certificate  /etc/cert/xxx.com/chain.pem;</span><br><span class="line">$</span><br><span class="line">$   ...</span><br><span class="line">$</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;现在，Letsencrypt 支持通配符证书申请了。&lt;/p&gt;</summary>
    
    
    
    <category term="运维相关" scheme="https://shangdev.github.io/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Https" scheme="https://shangdev.github.io/tags/Https/"/>
    
  </entry>
  
  <entry>
    <title>Linux 文件合并</title>
    <link href="https://shangdev.github.io/2019/01/30/Linux-%E6%96%87%E4%BB%B6%E5%90%88%E5%B9%B6/"/>
    <id>https://shangdev.github.io/2019/01/30/Linux-%E6%96%87%E4%BB%B6%E5%90%88%E5%B9%B6/</id>
    <published>2019-01-30T18:02:39.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>把 source 文件夹下的所有文件合并到 target 文件夹下。命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp -r -n <span class="built_in">source</span>/* target/</span><br></pre></td></tr></table></figure><p>其中：<br>-r：递归文件夹；<br>-f：覆盖已存在的目标文件，不给出提示；<br>-i：覆盖已存在的目标文件之前，给出提示，输入 y 则确认覆盖；<br>-n：不覆盖已存在的目标文件，直接跳过（使 -i 失效）；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;把 source 文件夹下的所有文件合并到 target 文件夹下。命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b</summary>
      
    
    
    
    <category term="运维相关" scheme="https://shangdev.github.io/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Linux" scheme="https://shangdev.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>WordPress 优化指南</title>
    <link href="https://shangdev.github.io/2018/12/23/WordPress-%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/"/>
    <id>https://shangdev.github.io/2018/12/23/WordPress-%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/</id>
    <published>2018-12-23T06:46:19.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>这篇我们从服务器层面优化 WordPress 的加载速度。推荐使用 PHP7.2 及以上，PHP7 的几个版本 Benchmark 的测试 <a href="https://kinsta.com/blog/php-benchmarks/">见这里</a>，也就是版本越高性能越好，WordPress 完全兼容 PHP7。</p><ul><li>启用 Zend Opcache</li><li>开启 Opcache 的 HugePage</li><li>启用 Memcached</li><li>其他</li></ul><a id="more"></a><h1 id="启用-Zend-Opcache"><a href="#启用-Zend-Opcache" class="headerlink" title="启用 Zend Opcache"></a>启用 Zend Opcache</h1><p>PHP7 默认支持 Opcache</p><p>所以只需在 php.ini 中加入修改以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opcache.enable&#x3D;1</span><br><span class="line">opcache.enable_cli&#x3D;1</span><br></pre></td></tr></table></figure><h1 id="开启-Opcache-的-HugePage"><a href="#开启-Opcache-的-HugePage" class="headerlink" title="开启 Opcache 的 HugePage"></a>开启 Opcache 的 HugePage</h1><p>以 Centos6 为例，通过：</p><p><code>$ sudo sysctl vm.nr_hugepages=512</code></p><p>分配 512 个预留的大页内存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat &#x2F;proc&#x2F;meminfo | grep Huge</span><br><span class="line">AnonHugePages:    106496 kB</span><br><span class="line">HugePages_Total:     512</span><br><span class="line">HugePages_Free:      504</span><br><span class="line">HugePages_Rsvd:       27</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:       2048 kB</span><br></pre></td></tr></table></figure><p>然后在 php.ini 中修改以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opcache.huge_code_pages&#x3D;1</span><br></pre></td></tr></table></figure><h1 id="启用-Memcached"><a href="#启用-Memcached" class="headerlink" title="启用 Memcached"></a>启用 Memcached</h1><p>安装 PHP Memcached 扩展：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum -y install memcached</span><br></pre></td></tr></table></figure><p>Memcached 默认端口为 11211，不建议修改</p><p>启用 Memcached 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chkconfig --level 2345 memcached on &#x2F;&#x2F;开机启动</span><br><span class="line">$ sudo service memcached start</span><br></pre></td></tr></table></figure><p>检查当前安装的版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ telnet 127.0.0.1 11211</span><br><span class="line">$ stats</span><br></pre></td></tr></table></figure><p>接下来安装 WordPress 对象缓存插件，将以下文件（命名为object-cache.php）内容复制到 wp-content 目录下即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;debug&#x27;</span>]) &amp;&amp; $_GET[<span class="string">&#x27;debug&#x27;</span>] == <span class="string">&#x27;sql&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">require_once</span> ( ABSPATH . WPINC . <span class="string">&#x27;/cache.php&#x27;</span> );</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !defined( <span class="string">&#x27;WP_CACHE_KEY_SALT&#x27;</span> ) )</span><br><span class="line">define( <span class="string">&#x27;WP_CACHE_KEY_SALT&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( class_exists( <span class="string">&#x27;Memcached&#x27;</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_add</span>(<span class="params"> $key, $data, $group = <span class="string">&#x27;&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;add( $key, $data, $group, $expire );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_incr</span>(<span class="params"> $key, $n = <span class="number">1</span>, $group = <span class="string">&#x27;&#x27;</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;incr( $key, $n, $group );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_decr</span>(<span class="params"> $key, $n = <span class="number">1</span>, $group = <span class="string">&#x27;&#x27;</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;decr( $key, $n, $group );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_delete</span>(<span class="params"> $key, $group = <span class="string">&#x27;&#x27;</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;delete( $key, $group );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_delete_multi</span>(<span class="params"> $keys, $group = <span class="string">&#x27;&#x27;</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;delete_multi( $keys, $group );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_flush</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;flush();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_get</span>(<span class="params"> $key, $group = <span class="string">&#x27;&#x27;</span>, $force = <span class="literal">false</span>, &amp;$found = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;get( $key, $group, $force, $found );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_get_with_cas</span>(<span class="params"> $key, $group = <span class="string">&#x27;&#x27;</span>, &amp;$cas_token = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;get_with_cas( $key, $group, $cas_token );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_cas</span>(<span class="params"> $cas_token, $key, $data, $group = <span class="string">&#x27;&#x27;</span>, $expire = <span class="number">0</span>  </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;cas( $cas_token, $key, $data, $group, $expire );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_get_multi</span>(<span class="params"> $keys, $group = <span class="string">&#x27;&#x27;</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;get_multi( $keys, $group );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_set_multi</span>(<span class="params"> $keys, $datas, $group= <span class="string">&#x27;&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;set_multi( $keys, $datas,  $group, $expire);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line">$wp_object_cache = <span class="keyword">new</span> WP_Object_Cache();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_replace</span>(<span class="params"> $key, $data, $group = <span class="string">&#x27;&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;replace( $key, $data, $group, $expire );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_set</span>(<span class="params"> $key, $data, $group = <span class="string">&#x27;&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( defined( <span class="string">&#x27;WP_INSTALLING&#x27;</span> ) == <span class="literal">false</span> ) &#123;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;set( $key, $data, $group, $expire );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;delete( $key, $group );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_switch_to_blog</span>(<span class="params"> $blog_id </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;switch_to_blog( $blog_id );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_add_global_groups</span>(<span class="params"> $groups </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line">$wp_object_cache-&gt;add_global_groups( $groups );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_cache_add_non_persistent_groups</span>(<span class="params"> $groups </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line">$wp_object_cache-&gt;add_non_persistent_groups( $groups );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wordpress_memcached_get_stats</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $wp_object_cache;</span><br><span class="line"><span class="keyword">return</span> $wp_object_cache-&gt;stats();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WP_Object_Cache</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> $global_groups= <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">private</span> $no_mc_groups= <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">private</span> $cache= <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">private</span> $mc= <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"> $id, $data, $group = <span class="string">&#x27;default&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line">$key = <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( is_object( $data ) ) &#123;</span><br><span class="line">$data= <span class="keyword">clone</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ) ) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ] = $data;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> ( <span class="keyword">isset</span>( <span class="keyword">$this</span>-&gt;cache[ $key ] ) &amp;&amp; <span class="keyword">$this</span>-&gt;cache[ $key ] !== <span class="literal">false</span> ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$result= <span class="keyword">$this</span>-&gt;mc-&gt;add( $key, $data, $expire );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="literal">false</span> !== $result ) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ]= $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_global_groups</span>(<span class="params"> $groups </span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( ! is_array( $groups ) ) &#123;</span><br><span class="line">$groups = (<span class="keyword">array</span>) $groups;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;global_groups= array_merge( <span class="keyword">$this</span>-&gt;global_groups, $groups );</span><br><span class="line"><span class="keyword">$this</span>-&gt;global_groups= array_unique( <span class="keyword">$this</span>-&gt;global_groups );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_non_persistent_groups</span>(<span class="params"> $groups </span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( ! is_array( $groups ) ) &#123;</span><br><span class="line">$groups = (<span class="keyword">array</span>) $groups;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;no_mc_groups= array_merge( <span class="keyword">$this</span>-&gt;no_mc_groups, $groups );</span><br><span class="line"><span class="keyword">$this</span>-&gt;no_mc_groups= array_unique( <span class="keyword">$this</span>-&gt;no_mc_groups );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">incr</span>(<span class="params"> $id, $n = <span class="number">1</span>, $group = <span class="string">&#x27;default&#x27;</span> </span>) </span>&#123;</span><br><span class="line">$key= <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mc-&gt;increment( $key, $n );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decr</span>(<span class="params"> $id, $n = <span class="number">1</span>, $group = <span class="string">&#x27;default&#x27;</span> </span>) </span>&#123;</span><br><span class="line">$key= <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mc-&gt;decrement( $key, $n );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;mc-&gt;quit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params"> $id, $group = <span class="string">&#x27;default&#x27;</span> </span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">$key = <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>( <span class="keyword">$this</span>-&gt;cache[ $key ] );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mc-&gt;delete( $key );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delete_multi</span>(<span class="params">$ids, $group = <span class="string">&#x27;default&#x27;</span></span>)</span>&#123;</span><br><span class="line">$keys =array_map(<span class="function"><span class="keyword">function</span>(<span class="params">$id</span>) <span class="title">use</span> (<span class="params">$group</span>)</span>&#123; <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;key( $id, $group ); &#125;, $ids);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($keys <span class="keyword">as</span> $key) &#123;</span><br><span class="line"><span class="keyword">unset</span>( <span class="keyword">$this</span>-&gt;cache[ $key ] );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$result= <span class="keyword">$this</span>-&gt;mc-&gt;deleteMulti( $keys );</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flush</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mc-&gt;flush();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"> $id, $group = <span class="string">&#x27;default&#x27;</span>, $force = <span class="literal">false</span>, &amp;$found = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">$key= <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">isset</span>( <span class="keyword">$this</span>-&gt;cache[ $key ] ) &amp;&amp; ( ! $force || in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ) ) ) &#123;</span><br><span class="line"><span class="keyword">if</span> ( is_object( <span class="keyword">$this</span>-&gt;cache[ $key ] ) ) &#123;</span><br><span class="line">$value= <span class="keyword">clone</span> <span class="keyword">$this</span>-&gt;cache[ $key ];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$value= <span class="keyword">$this</span>-&gt;cache[ $key ];</span><br><span class="line">&#125;</span><br><span class="line">$found= <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ) ) &#123;</span><br><span class="line">$value= <span class="literal">false</span>;</span><br><span class="line">$found= <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$value= <span class="keyword">$this</span>-&gt;mc-&gt;get( $key );</span><br><span class="line">$found= <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mc-&gt;getResultCode() == Memcached::RES_NOTFOUND) &#123;</span><br><span class="line">$value = <span class="literal">false</span>;</span><br><span class="line">$found = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ] = $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_with_cas</span>(<span class="params"> $id, $group = <span class="string">&#x27;default&#x27;</span>, &amp;$cas_token=<span class="literal">null</span></span>)</span>&#123;</span><br><span class="line">$key= <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(defined(<span class="string">&#x27;Memcached::GET_EXTENDED&#x27;</span>)) &#123;</span><br><span class="line">$result= <span class="keyword">$this</span>-&gt;mc-&gt;get($key, <span class="literal">null</span>, Memcached::GET_EXTENDED);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mc-&gt;getResultCode() == Memcached::RES_NOTFOUND) &#123;</span><br><span class="line">$value= <span class="literal">false</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$value= $result[<span class="string">&#x27;value&#x27;</span>];</span><br><span class="line">$cas_token = $result[<span class="string">&#x27;cas&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$value= <span class="keyword">$this</span>-&gt;mc-&gt;get($key, <span class="literal">null</span>, $cas_token);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mc-&gt;getResultCode() == Memcached::RES_NOTFOUND) &#123;</span><br><span class="line">$value= <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cas</span>(<span class="params"> $cas_token, $id, $data, $group = <span class="string">&#x27;default&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line">$key = <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( is_object( $data ) ) &#123;</span><br><span class="line">$data = <span class="keyword">clone</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ] = $data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mc-&gt;cas( $cas_token, $key, $data, $expire );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_multi</span>(<span class="params"> $ids, $group = <span class="string">&#x27;default&#x27;</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$keys =array_map(<span class="function"><span class="keyword">function</span>(<span class="params">$id</span>) <span class="title">use</span> (<span class="params">$group</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line">&#125;, $ids);</span><br><span class="line"></span><br><span class="line">$key_ids = array_combine($keys, $ids);</span><br><span class="line"></span><br><span class="line"><span class="comment">// $version = intval($this-&gt;mc-&gt;getVersion());</span></span><br><span class="line"><span class="comment">// if ($version &lt; 3) &#123;</span></span><br><span class="line"><span class="comment">// $results = $this-&gt;mc-&gt;getMulti( $keys, $cas_tokens, Memcached::GET_PRESERVE_ORDER );</span></span><br><span class="line"><span class="comment">// &#125; else &#123;</span></span><br><span class="line"><span class="comment">// $results = $this-&gt;mc-&gt;getMulti( $keys, Memcached::GET_PRESERVE_ORDER);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">$results= <span class="keyword">$this</span>-&gt;mc-&gt;getMulti($keys);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($results)&#123;</span><br><span class="line">$returns= <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span> ($key_ids <span class="keyword">as</span> $key=&gt;$id) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($results[$key]))&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ] = $results[$key];</span><br><span class="line">$returns[$id]= $results[$key];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $returns;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $results;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">key</span>(<span class="params"> $id, $group </span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">empty</span>( $group ) ) &#123;</span><br><span class="line">$group = <span class="string">&#x27;default&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="literal">false</span> !== array_search( $group, <span class="keyword">$this</span>-&gt;global_groups ) ) &#123;</span><br><span class="line">$prefix = <span class="keyword">$this</span>-&gt;global_prefix;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$prefix = <span class="keyword">$this</span>-&gt;blog_prefix;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> preg_replace( <span class="string">&#x27;/\s+/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, WP_CACHE_KEY_SALT . <span class="string">&quot;<span class="subst">$prefix</span><span class="subst">$group</span>:<span class="subst">$id</span>&quot;</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replace</span>(<span class="params"> $id, $data, $group = <span class="string">&#x27;default&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line">$key= <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( is_object( $data ) ) &#123;</span><br><span class="line">$data = <span class="keyword">clone</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;mc-&gt;replace( $key, $data, $expire );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="literal">false</span> !== $result ) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ] = $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"> $id, $data, $group = <span class="string">&#x27;default&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line">$key = <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( is_object( $data ) ) &#123;</span><br><span class="line">$data = <span class="keyword">clone</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ] = $data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mc-&gt;set( $key, $data, $expire );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_multi</span>(<span class="params"> $ids, $datas, $group = <span class="string">&#x27;default&#x27;</span>, $expire = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( in_array( $group, <span class="keyword">$this</span>-&gt;no_mc_groups ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$keys =array_map(<span class="function"><span class="keyword">function</span>(<span class="params">$id</span>) <span class="title">use</span> (<span class="params">$group</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;key( $id, $group );</span><br><span class="line">&#125;, $ids);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($keys <span class="keyword">as</span> $i=&gt;$key) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cache[ $key ] = $datas[$i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$items= array_combine($keys, $datas);</span><br><span class="line"></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;mc-&gt;setMulti( $items, $expire );</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switch_to_blog</span>(<span class="params"> $blog_id </span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $table_prefix;</span><br><span class="line">$blog_id = (<span class="keyword">int</span>) $blog_id;</span><br><span class="line"><span class="keyword">$this</span>-&gt;blog_prefix = ( is_multisite() ? $blog_id : $table_prefix ) . <span class="string">&#x27;:&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">colorize_debug_line</span>(<span class="params"> $line </span>) </span>&#123;</span><br><span class="line">$colors = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;get&#x27;</span>=&gt; <span class="string">&#x27;green&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;set&#x27;</span>=&gt; <span class="string">&#x27;purple&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;add&#x27;</span>=&gt; <span class="string">&#x27;blue&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;delete&#x27;</span> =&gt; <span class="string">&#x27;red&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$cmd = substr( $line, <span class="number">0</span>, strpos( $line, <span class="string">&#x27; &#x27;</span> ) );</span><br><span class="line"></span><br><span class="line">$cmd2 = <span class="string">&quot;&lt;span style=&#x27;color:<span class="subst">&#123;$colors[$cmd]&#125;</span>&#x27;&gt;<span class="subst">$cmd</span>&lt;/span&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $cmd2 . substr( $line, strlen( $cmd ) ) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stats</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$stats_text = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$stats = <span class="keyword">$this</span>-&gt;mc-&gt;getStats();</span><br><span class="line"><span class="keyword">foreach</span> ( $stats <span class="keyword">as</span> $key =&gt; $details ) &#123;</span><br><span class="line">$stats_text .= <span class="string">&#x27;memcached: &#x27;</span> . $key . <span class="string">&quot;\n\r&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span> ( $details <span class="keyword">as</span> $name =&gt; $value ) &#123;</span><br><span class="line">$stats_text .= $name . <span class="string">&#x27;: &#x27;</span> . $value . <span class="string">&quot;\n\r&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$stats_text .= <span class="string">&quot;\n\r&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $stats_text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_mc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">failure_callback</span>(<span class="params"> $host, $port </span>) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;mc = <span class="keyword">new</span> Memcached();</span><br><span class="line"><span class="keyword">$this</span>-&gt;mc -&gt;setOption(Memcached::OPT_LIBKETAMA_COMPATIBLE, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;mc-&gt;getServerList())&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;mc-&gt;addServer(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">11211</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// global $memcached_servers;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if ( isset( $memcached_servers ) ) &#123;</span></span><br><span class="line"><span class="comment">// $buckets = $memcached_servers;</span></span><br><span class="line"><span class="comment">// &#125; else &#123;</span></span><br><span class="line"><span class="comment">// $buckets = array( &#x27;127.0.0.1&#x27; );</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// reset( $buckets );</span></span><br><span class="line"><span class="comment">// if ( is_int( key( $buckets ) ) ) &#123;</span></span><br><span class="line"><span class="comment">// $buckets = array( &#x27;default&#x27; =&gt; $buckets );</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// foreach ( $buckets as $bucket =&gt; $servers ) &#123;</span></span><br><span class="line"><span class="comment">// $this-&gt;mc[ $bucket ] = new Memcached($bucket);</span></span><br><span class="line"><span class="comment">// $this-&gt;mc[ $bucket ] -&gt;setOption(Memcached::OPT_LIBKETAMA_COMPATIBLE, true);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if(count($this-&gt;mc[ $bucket ]-&gt;getServerList()))&#123;</span></span><br><span class="line"><span class="comment">// continue;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $instances = array();</span></span><br><span class="line"><span class="comment">// foreach ( $servers as $server ) &#123;</span></span><br><span class="line"><span class="comment">// @list( $node, $port ) = explode( &#x27;:&#x27;, $server.&quot;:&quot; );</span></span><br><span class="line"><span class="comment">// if ( empty( $port ) ) &#123;</span></span><br><span class="line"><span class="comment">// $port = ini_get( &#x27;memcache.default_port&#x27; );</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// $port = intval( $port );</span></span><br><span class="line"><span class="comment">// if ( ! $port ) &#123;</span></span><br><span class="line"><span class="comment">// $port = 11211;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $instances[] = array( $node, $port, 1 );</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// $this-&gt;mc[ $bucket ]-&gt;addServers( $instances );</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> $blog_id, $table_prefix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;global_prefix = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;blog_prefix   = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( function_exists( <span class="string">&#x27;is_multisite&#x27;</span> ) ) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;global_prefix = ( is_multisite() || defined( <span class="string">&#x27;CUSTOM_USER_TABLE&#x27;</span> ) &amp;&amp; defined( <span class="string">&#x27;CUSTOM_USER_META_TABLE&#x27;</span> ) ) ? <span class="string">&#x27;&#x27;</span> : $table_prefix;</span><br><span class="line"><span class="keyword">$this</span>-&gt;blog_prefix   = ( is_multisite() ? $blog_id : $table_prefix ) . <span class="string">&#x27;:&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// $this-&gt;cache_hits   =&amp; $this-&gt;stats[&#x27;get&#x27;];</span></span><br><span class="line"><span class="comment">// $this-&gt;cache_misses =&amp; $this-&gt;stats[&#x27;add&#x27;];</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// No Memcached</span></span><br><span class="line"><span class="keyword">if</span> ( function_exists( <span class="string">&#x27;wp_using_ext_object_cache&#x27;</span> ) ) &#123;</span><br><span class="line"><span class="comment">// In 3.7+, we can handle this smoothly</span></span><br><span class="line">wp_using_ext_object_cache( <span class="literal">false</span> );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// In earlier versions, there isn&#x27;t a clean bail-out method.</span></span><br><span class="line">wp_die( <span class="string">&#x27;Memcached class not available.&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="使用新的编译器"><a href="#使用新的编译器" class="headerlink" title="使用新的编译器"></a>使用新的编译器</h2><p>推荐 GCC4.8 以上，所以直接用 Centos Latest 吧，Ubuntu 也是</p><h2 id="Opcache-file-cache（试验性）"><a href="#Opcache-file-cache（试验性）" class="headerlink" title="Opcache file cache（试验性）"></a>Opcache file cache（试验性）</h2><p>在 php.ini 中修改以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opcache.file_cache&#x3D;&#x2F;tmp</span><br></pre></td></tr></table></figure><h2 id="PGO"><a href="#PGO" class="headerlink" title="PGO"></a>PGO</h2><p>详细设置见鸟哥的这篇文章 <a href="http://www.laruence.com/2015/06/19/3063.html">让你的PHP7更快(GCC PGO) </a></p><p>以 WordPress 5.0.2 为优化场景，在编译 PHP 的时候首先：</p><p><code>$ make prof-gen</code></p><p>然后使用 WordPress 来训练 PHP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sapi&#x2F;cgi&#x2F;php-cgi -T 100</span><br><span class="line">&#x2F;path_to_wordpress&#x2F;index.php &gt; &#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure><p>即让 php-cgi 跑100遍 WordPress 的首页, 从而生成一些在这个过程中的 profile 信息</p><p>最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ make prof-clean</span><br><span class="line">$ make prof-use &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>这个时候的 PHP7 就是为 WordPress 量身打造的最高性能的编译版本</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这篇我们从服务器层面优化 WordPress 的加载速度。推荐使用 PHP7.2 及以上，PHP7 的几个版本 Benchmark 的测试 &lt;a href=&quot;https://kinsta.com/blog/php-benchmarks/&quot;&gt;见这里&lt;/a&gt;，也就是版本越高性能越好，WordPress 完全兼容 PHP7。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启用 Zend Opcache&lt;/li&gt;
&lt;li&gt;开启 Opcache 的 HugePage&lt;/li&gt;
&lt;li&gt;启用 Memcached&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="wordpress" scheme="https://shangdev.github.io/categories/wordpress/"/>
    
    
    <category term="PHP" scheme="https://shangdev.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>使用Docker部署线上开发/生产环境</title>
    <link href="https://shangdev.github.io/2018/09/01/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2%E7%BA%BF%E4%B8%8A%E5%BC%80%E5%8F%91-%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83/"/>
    <id>https://shangdev.github.io/2018/09/01/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2%E7%BA%BF%E4%B8%8A%E5%BC%80%E5%8F%91-%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83/</id>
    <published>2018-09-01T17:01:48.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>不擅长运维又很喜欢运维的我，每次在线上或者线下部署开发/生产环境时都无聊到要死，感觉就跟ctrl+c、ctrl+v似的，既浪费了大把的时间，又觉得索然无味，所以就有了这篇文章。</p><p>Docker是什么？借用wikipedia上的解释：</p><blockquote><p>Docker是一个开放源代码软件项目，让应用程序布署在软件容器下的工作可以自动化进行，借此在Linux操作系统上，提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制。</p></blockquote><p>至于我们为什么要使用Docker？那就得说到它的众多优势了：</p><ul><li>更高效的利用系统资源</li><li>更快的启动时间</li><li>一致的运行环境</li><li>持续交付和部署</li><li>更轻松的迁移</li><li>更轻松的维护和扩展</li></ul><a id="more"></a><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><p>Docker有两个版本，CE（社区版、免费）和EE（企业版、付费），这里我使用到的是社区版，主要讲在Linux（CentOS 7）下到安装：</p><blockquote><p>注意：这里讲到的安装前提是以前没有安装过Docker。</p></blockquote><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><ul><li>CentOS 7 64位及以上</li><li>内核 &gt;= 3.10</li></ul><h2 id="使用yum安装"><a href="#使用yum安装" class="headerlink" title="使用yum安装"></a>使用yum安装</h2><p>首先安装以下依赖包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sudo yum install -y yum-utils \</span><br><span class="line">           device-mapper-persistent-data \</span><br><span class="line">           lvm2</span><br></pre></td></tr></table></figure><p>添加yum安装源，任选其一，国内源会快些：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line"></span><br><span class="line">官方源</span><br><span class="line"># sudo yum-config-manager \</span><br><span class="line">#     --add-repo \</span><br><span class="line">#     https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装Docker CE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sudo yum makecache fast</span><br><span class="line"># sudo yum install docker-ce</span><br></pre></td></tr></table></figure><p>启用Docker CE：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sudo systemctl enable docker</span><br><span class="line"># sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>默认情况下，只有root和docker用户组才能访问Docker引擎，因此需要将使用Docker的用户加入到Docker用户组中。</p><p>建立docker组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sudo groupadd docker</span><br></pre></td></tr></table></figure><p>添加当前用户至Docker组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure><p>查看是否安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker info</span><br></pre></td></tr></table></figure><p>同时我们还需要安装Docker-compose：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意：其中1.22.0是版本号，将其替换为最新的</span><br><span class="line"># sudo curl -L https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.22.0&#x2F;docker-compose-&#96;uname -s&#96;-&#96;uname -m&#96; &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br><span class="line"># sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure><h1 id="使用Docker"><a href="#使用Docker" class="headerlink" title="使用Docker"></a>使用Docker</h1><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><p>拉取镜像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker pull [仓库名]:[标签]</span><br></pre></td></tr></table></figure><p>例如，拉取版本为16.04的Ubuntu：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker pull ubuntu:16.04</span><br></pre></td></tr></table></figure><p>列出本机所有的image（镜像）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker image ls</span><br></pre></td></tr></table></figure><p>删除本机指定镜像，其中，[镜像]值可以是镜像短ID、长ID、镜像名、镜像摘要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker image rm [镜像]</span><br></pre></td></tr></table></figure><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p>容器轻量到我们可以随时删除和启用它。</p><p>新建及启用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker run [镜像名]</span><br></pre></td></tr></table></figure><p>可能需要进入容器bash终端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker run -t -i [镜像名] &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>查看当前运行的所有容器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker container ls</span><br></pre></td></tr></table></figure><p>终止一个容器，[容器名]值可以是镜像短ID、长ID、镜像名、镜像摘要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker stop [容器名]</span><br></pre></td></tr></table></figure><p>重启一个容器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker restart [容器名]</span><br></pre></td></tr></table></figure><p>删除指定的容器，需要先终止：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker container rm [容器名]</span><br></pre></td></tr></table></figure><h1 id="最好的实践"><a href="#最好的实践" class="headerlink" title="最好的实践"></a>最好的实践</h1><blockquote><p><a href="https://github.com/khs1994-docker/lnmp">khs1994-docker/lnmp</a>是基于Docker Compose的一键搭建 LNMP(LEMP) 开发环境和生产环境(集群)的开源项目。</p></blockquote><p>该项目严禁直接编辑除 .env 文件以外的所有文件，目的是方便我们可以 <strong>无痛升级</strong> 。虽然如此，但是仍然可以实现全部的自定义功能，<a href="https://github.com/khs1994-docker/lnmp/blob/master/docs/config.md">在这里</a>查看指南。</p><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><ul><li>Docker CE 18.06 Stable +</li><li>Docker Compose 1.22.0+</li><li>WSL (Windows Only)</li></ul><h2 id="快速指南"><a href="#快速指南" class="headerlink" title="快速指南"></a>快速指南</h2><p>拉取项目到你想存放的指定(如：/var/www/example/)目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># git clone --depth&#x3D;1 --recursive https:&#x2F;&#x2F;code.aliyun.com&#x2F;khs1994-docker&#x2F;lnmp.git &#x2F;var&#x2F;www&#x2F;example&#x2F;</span><br></pre></td></tr></table></figure><p>进入项目并启用一个Demo：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;var&#x2F;www&#x2F;example&#x2F;</span><br><span class="line"># .&#x2F;lnmp-docker up</span><br></pre></td></tr></table></figure><p>启用后访问IP可得到如下信息即可正常运行：<br>Welcome use khs1994-docker/lnmp v18.10 x86_64 With Pull Docker Image development</p><h2 id="数据库切换"><a href="#数据库切换" class="headerlink" title="数据库切换"></a>数据库切换</h2><p>编辑 .env 文件，修改变量 LNMP_MYSQL_VERSION 的值，这里我们把默认的版本降级为 5.6.41：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LNMP_MYSQL_VERSION&#x3D;5.6.41</span><br></pre></td></tr></table></figure><p>注意，先前我们运行最新版的mysql，现在我们降级到 5.6.41 版本，导致数据不兼容，所以mysql容器没起来，所以需要先删除mysql数据卷，再启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;lnmp-docker down -v</span><br><span class="line"># docker volume rm lnmp_mysql-data</span><br><span class="line"># .&#x2F;lnmp-docker up</span><br></pre></td></tr></table></figure><p>而由于 mysql5.6.41 版本中不支持变量log_timestamps（5.7中新增），所以我们需要把该项目中该变量的定义注释掉：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi lnmp&#x2F;config&#x2F;mysql&#x2F;docker.cnf</span><br></pre></td></tr></table></figure><p>注释其中的 log_timestamps=SYSTEM</p><h2 id="SSl证书"><a href="#SSl证书" class="headerlink" title="SSl证书"></a>SSl证书</h2><p>该项目集成了acme.sh，<a href="https://github.com/khs1994-docker/lnmp/blob/master/docs/nginx/issue-ssl.md">在这里</a>查看</p><blockquote><p>提示，<code>*.example.com</code> 的证书不支持 <code>example.com</code> 所以一个主域要写两次</p></blockquote><blockquote><p>提示，第一个网址不用加 <code>-d</code> 参数，后面的需要加 <code>-d</code> 参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;lnmp-docker ssl example.cn -d *.example.cn</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这是第一次接触 Docker，不明之处还有很多，所以会持续学习并更新该文，谢谢大家的阅读！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;不擅长运维又很喜欢运维的我，每次在线上或者线下部署开发/生产环境时都无聊到要死，感觉就跟ctrl+c、ctrl+v似的，既浪费了大把的时间，又觉得索然无味，所以就有了这篇文章。&lt;/p&gt;
&lt;p&gt;Docker是什么？借用wikipedia上的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker是一个开放源代码软件项目，让应用程序布署在软件容器下的工作可以自动化进行，借此在Linux操作系统上，提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;至于我们为什么要使用Docker？那就得说到它的众多优势了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更高效的利用系统资源&lt;/li&gt;
&lt;li&gt;更快的启动时间&lt;/li&gt;
&lt;li&gt;一致的运行环境&lt;/li&gt;
&lt;li&gt;持续交付和部署&lt;/li&gt;
&lt;li&gt;更轻松的迁移&lt;/li&gt;
&lt;li&gt;更轻松的维护和扩展&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="运维相关" scheme="https://shangdev.github.io/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Docker" scheme="https://shangdev.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>学习笔记：PHP7内核剖析（秦朋/著）</title>
    <link href="https://shangdev.github.io/2018/07/06/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9APHP7%E5%86%85%E6%A0%B8%E5%89%96%E6%9E%90%EF%BC%88%E7%A7%A6%E6%9C%8B-%E8%91%97%EF%BC%89/"/>
    <id>https://shangdev.github.io/2018/07/06/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9APHP7%E5%86%85%E6%A0%B8%E5%89%96%E6%9E%90%EF%BC%88%E7%A7%A6%E6%9C%8B-%E8%91%97%EF%BC%89/</id>
    <published>2018-07-06T14:55:36.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录在阅读学习**&lt;&lt;PHP7内核剖析&gt;&gt;**过程中的所思所想所感，以备后用。</p><a id="more"></a><h1 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><h2 id="PDO"><a href="#PDO" class="headerlink" title="PDO"></a>PDO</h2><p>英文全称：PHP Data Objects，一种在PHP里连接<strong>数据库</strong>的使用接口，她提供了一个数据访问抽象层，这意味着，不管使用哪种数据库，都可以用相同的函数（方法）来查询和获取数据。</p><h2 id="PEAR"><a href="#PEAR" class="headerlink" title="PEAR"></a>PEAR</h2><p>英文全称：PHP Extension and Application Repository，PHP扩展与应用库。它是一个PHP扩展及应用的一个代码仓库，简单地说，PEAR之于PHP就像是CPAN(Comprehensive Perl Archive Network)之于Perl。</p><h2 id="PECL"><a href="#PECL" class="headerlink" title="PECL"></a>PECL</h2><p>英文全称：The PHP Extension Community Library，是一个开放的并通过PEAR打包格式来打包安装的PHP扩展库仓库。通过 PEAR 的 Package Manager 的安装管理方式，可以对 PECL 模块进行下载和安装。</p><h2 id="Native-TLS"><a href="#Native-TLS" class="headerlink" title="Native TLS"></a>Native TLS</h2><p>线程局部存储。</p><h2 id="Cli"><a href="#Cli" class="headerlink" title="Cli"></a>Cli</h2><p>英文全称：Command Line Interface，即命令行接口。用于在命令行下执行PHP脚本，就像Shell那样，它是执行PHP脚本最简单的一种方式。</p><h2 id="FastCGI"><a href="#FastCGI" class="headerlink" title="FastCGI"></a>FastCGI</h2><p>它是Web服务器（如Nginx、Apache）和处理程序之间的一种通信协议，它是与HTTP类似的一种应用层通信协议。注意：它只是一种协议！</p><h2 id="Fpm"><a href="#Fpm" class="headerlink" title="Fpm"></a>Fpm</h2><p>英文全称：FastCGI Process Manager，它是PHP FastCGI运行模式的一个进程管理器。</p><h2 id="ZTS"><a href="#ZTS" class="headerlink" title="ZTS"></a>ZTS</h2><p>英文全称：Zend Thread Safety，即Zend线程安全。它是Zend为线程安全机制所提供的用于保证线程的安全，是防止多线程环境下以模块的形式加载并执行PHP解释器，导致内部一些公共资源读取错误，而提供的一种解决方法。</p><h2 id="TSRM"><a href="#TSRM" class="headerlink" title="TSRM"></a>TSRM</h2><p>英文全称：Thread Safe Resource Manager，即线程安全资源管理器。</p><h2 id="tsrm-ls"><a href="#tsrm-ls" class="headerlink" title="tsrm_ls"></a>tsrm_ls</h2><p>英文全称：TSRM Local Storage，即TSRM存储器。这个是在扩展和Zend中真正被实际使用的指代TSRM存储的变量名。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文记录在阅读学习**&amp;lt;&amp;lt;PHP7内核剖析&amp;gt;&amp;gt;**过程中的所思所想所感，以备后用。&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://shangdev.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="PHP" scheme="https://shangdev.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>一次服务器CPU负载高的排查及解决</title>
    <link href="https://shangdev.github.io/2018/07/04/%E4%B8%80%E6%AC%A1%E6%9C%8D%E5%8A%A1%E5%99%A8CPU%E8%B4%9F%E8%BD%BD%E9%AB%98%E7%9A%84%E6%8E%92%E6%9F%A5%E5%8F%8A%E8%A7%A3%E5%86%B3/"/>
    <id>https://shangdev.github.io/2018/07/04/%E4%B8%80%E6%AC%A1%E6%9C%8D%E5%8A%A1%E5%99%A8CPU%E8%B4%9F%E8%BD%BD%E9%AB%98%E7%9A%84%E6%8E%92%E6%9F%A5%E5%8F%8A%E8%A7%A3%E5%86%B3/</id>
    <published>2018-07-04T13:39:19.000Z</published>
    <updated>2023-10-18T03:08:41.949Z</updated>
    
    <content type="html"><![CDATA[<p>工作使我快乐，这句话说出来我自己都不信，工作中总会有解决不完的问题，往往前一个Bug解决了，后一个Bug就接踵而来，我们不是在解决Bug，就是在解决Bug的路上。但是，也正因为这种不断的解决问题，不断的突破，才对这份工作有了乐趣，并为之努力。<br>其实对于每一个项目来说，她就像是我们的“孩子”一样，总想让他变得好一点，再好一点…</p><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>为了杜绝不良网名对我们的服务器IP进行直接访问，我在nginx配置那里做了一些“小小的”调整，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server ipv6only&#x3D;on;</span><br><span class="line">    server_name _;</span><br><span class="line"></span><br><span class="line">    rewrite ^(.*)https:&#x2F;&#x2F;www.abc.com permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家估计也看出来了，就是我想让不明地址、IP访问都跳转到我们<a href="https://www.abc.com/">主站</a>上。</p><h1 id="表现"><a href="#表现" class="headerlink" title="表现"></a>表现</h1><p>重启nginx服务后，我们服务器上所有存在的网站访问就出问题了。具体表现为：只要访问任何一个存放在服务器上的网站，服务器的CPU立马高负载（15~20%），导致再次访问时会进入一直pedding状态。<br>这可不行啊，要知道我们所有的网站都是在Google上投放广告的，一旦网站出现问题，google就会据登广告，这将会给广告商带来大大的损失，于是我放下了手头的工作，马上进行了排查。</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>首先，我以为是近期更新网站时代码里某一处出了错误，于是我关掉了进行更新过的插件，然而，问题依旧存在；<br>然后，不是代码的问题，那可能是php-fpm进程太多导致的？查看了一下php-fpm的错误日志，都是一些Notice，并没有Erroor,所以这里也可以排除掉；<br>那么，再就是用户量太大？看一下Zabbix监控吧，发现CPU负载从早上10.30开始一直高负荷；那再看一下网站流量吧，从前一天晚上11点开始后就有大量的流量进来，也就是用户量激增到平时的十多倍。<br>昨晚11点干啥了？就是改nginx的配置了啊，那改了哪一处呢？病原在这儿：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^(.*)https:&#x2F;&#x2F;www.abc.com permanent;</span><br></pre></td></tr></table></figure><p>我理解的是他把无效域名和IP都转发到了我们的主战，从而引来了大量的不速之客（大流量），占完了CPU资源，导致后面进来的用户就会pedding状态，把这里改一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server ipv6only&#x3D;on;</span><br><span class="line">    server_name _;</span><br><span class="line"></span><br><span class="line">    return 444</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>工作使我快乐，善待每一次线上版本的修改及理清处理问题的排查思路，今天就到这儿了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;工作使我快乐，这句话说出来我自己都不信，工作中总会有解决不完的问题，往往前一个Bug解决了，后一个Bug就接踵而来，我们不是在解决Bug，就是在解决Bug的路上。但是，也正因为这种不断的解决问题，不断的突破，才对这份工作有了乐趣，并为之努力。&lt;br&gt;其实对于每一个项目来说，她就像是我们的“孩子”一样，总想让他变得好一点，再好一点…&lt;/p&gt;</summary>
    
    
    
    <category term="运维相关" scheme="https://shangdev.github.io/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Nginx" scheme="https://shangdev.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>wp-calypso安装那些事儿</title>
    <link href="https://shangdev.github.io/2018/01/26/wp-calupso%E5%AE%89%E8%A3%85%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <id>https://shangdev.github.io/2018/01/26/wp-calupso%E5%AE%89%E8%A3%85%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</id>
    <published>2018-01-26T18:27:00.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>什么是wp-calypso呢？看这里：<a href="https://github.com/Automattic/wp-calypso">wpcalypso - 古腾堡</a>。<br>简单讲这是一个致力于让wordpress后台变得更轻、快、好的前端应用。<br>在本地安装wp-calypso时我遇到了各种各样的坑，特此记录。  </p><h1 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境"></a>服务器环境</h1><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p>虽然官方使用的node版本是v8.9.3，但是我们把它更新到最新版，截至此时最新版是v8.9.4。使用nvm管理器来对node进行版本管理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 切换到安装目录</span><br><span class="line">cd ~</span><br><span class="line"># 下载nvm最新版</span><br><span class="line">curl -o- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.8&#x2F;install.sh | bash</span><br><span class="line">or</span><br><span class="line">wget -qO- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.8&#x2F;install.sh | bash</span><br><span class="line"># 安装</span><br><span class="line">source ~&#x2F;.bashrc</span><br><span class="line"># 列出所有可用的node</span><br><span class="line">nvm ls -remote</span><br><span class="line"># 下载指定的node</span><br><span class="line">nvm install v8.9.4</span><br><span class="line"># 设置系统默认的node</span><br><span class="line">nvm alisa default v8.9.4</span><br><span class="line"># 查看当前node</span><br><span class="line">node -v</span><br><span class="line"># 也可以直接下载LTS版node</span><br><span class="line">nvm install lts&#x2F;carbon</span><br></pre></td></tr></table></figure><h2 id="gcc"><a href="#gcc" class="headerlink" title="gcc"></a>gcc</h2><p>如果你使用centos6.9及以下版本，那么默认gcc版本在v4.4.7以下，包括v4.4.7，现在升级到最新版，截止此时最新版是v7.3.0.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 切换到安装的目录</span><br><span class="line">cd ~</span><br><span class="line"># 下载最新版gcc（截止目前为v7.3.0）</span><br><span class="line">wget ftp:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;gcc&#x2F;gcc-7.3.0&#x2F;gcc-7.3.0.tar.gz</span><br><span class="line">tar zxf gcc-7.3.0.tar.gz</span><br><span class="line">cd gcc-7.3.0</span><br><span class="line"># 下载所需依赖包</span><br><span class="line">.&#x2F;contrib&#x2F;download_prerequisites</span><br><span class="line"># 创建编译后文件存放目录（gcc-build-7.3.0）</span><br><span class="line">mkdir gcc-build-7.3.0</span><br><span class="line">cd gcc-build-7.3.0</span><br><span class="line"># 编译更新</span><br><span class="line">..&#x2F;configure -enable-checking&#x3D;release -enable-languages&#x3D;c,c++ -disable-multilib</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"># 重启虚拟机</span><br><span class="line">reboot</span><br><span class="line"># 查看安装的gcc</span><br><span class="line">gcc- v</span><br></pre></td></tr></table></figure><h1 id="npm-start曲折"><a href="#npm-start曲折" class="headerlink" title="npm start曲折"></a>npm start曲折</h1><p>执行npm start后可能会有错误发生，如：  </p><h2 id="‘GLIBCXX-3-4-21’not-found"><a href="#‘GLIBCXX-3-4-21’not-found" class="headerlink" title="‘GLIBCXX_3.4.21’not found"></a>‘GLIBCXX_3.4.21’not found</h2><p>这是因为升级gcc时，生成的动态库没有替换老版本gcc的动态库导致的，将gcc最新版本的动态库替换系统中老版本的动态库即可解决，如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 执行以下命令，查找编译gcc时生成的最新动态库：</span><br><span class="line">find &#x2F; -name &quot;libstdc++.so*&quot;</span><br><span class="line"># 将输出的最新动态库libstdc++.so.6.0.24复制到&#x2F;usr&#x2F;lib64目录下：</span><br><span class="line">cp &#x2F;home&#x2F;gcc-7.3.0&#x2F;gcc-temp&#x2F;stage1-x86_64-unknown-linux-gnu&#x2F;libstdc++-v3&#x2F;src&#x2F;.libs&#x2F;libstdc++.so.6.0.24 &#x2F;usr&#x2F;lib64</span><br><span class="line"># 重建默认库的软连接</span><br><span class="line">cd &#x2F;usr&#x2F;lib64</span><br><span class="line">rm -rf libstdc++.so.6</span><br><span class="line">ln -s libstdc++.so.6.0.24 libstdc++.so.6</span><br><span class="line"># 重新运行以下命令检查动态库，出现（GLIBCXX_3.4.24）即替换成功</span><br><span class="line">strings &#x2F;usr&#x2F;lib64&#x2F;libstdc++.so.6 | grep GLIBC</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Hosts"><a href="#Hosts" class="headerlink" title="Hosts"></a>Hosts</h1><p>这里是由于个人原因导致的，因为我是在公司的虚拟机上运行的wp-calypso项目，所以需要对hosts文件做一些手脚：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 修改本地hosts文件，新增行（172.22.11.123为目标虚拟机IP）：</span><br><span class="line">172.22.11.123 dev.calypso.com</span><br><span class="line"># 修改虚拟机hosts文件（vi &#x2F;etc&#x2F;hosts）</span><br><span class="line">127.0.0.1 calypso.localhost</span><br><span class="line"># 修改nginx配置文件</span><br><span class="line"># the IP(s) on which your node server is running. I chose port 4000.</span><br><span class="line">upstream dev.calypso.com &#123;</span><br><span class="line">    server calypso.localhost:3000;</span><br><span class="line">    keepalive 1;</span><br><span class="line">&#125;</span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        #listen [::]:80;</span><br><span class="line">        server_name dev.calypso.com;</span><br><span class="line"></span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;dev.calypso.com;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  &#x2F;home&#x2F;wwwlogs&#x2F;dev.calypso.com.log;</span><br><span class="line">    &#125;</span><br><span class="line"># 本地浏览器打开dev.calypso.com即可</span><br></pre></td></tr></table></figure><p>至此，安装完成了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;什么是wp-calypso呢？看这里：&lt;a href=&quot;https://github.com/Automattic/wp-calypso&quot;&gt;wpcalypso - 古腾堡&lt;/a&gt;。&lt;br&gt;简单讲这是一个致力于让wordpress后台变得更轻、快、好的前端应用。&lt;br&gt;在本地</summary>
      
    
    
    
    <category term="wordpress" scheme="https://shangdev.github.io/categories/wordpress/"/>
    
    
    <category term="PHP" scheme="https://shangdev.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>centos开放mysql服务授权远程ip访问权限</title>
    <link href="https://shangdev.github.io/2017/05/11/centos%E5%BC%80%E6%94%BEmysql%E6%9C%8D%E5%8A%A1%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8Bip%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/"/>
    <id>https://shangdev.github.io/2017/05/11/centos%E5%BC%80%E6%94%BEmysql%E6%9C%8D%E5%8A%A1%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8Bip%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</id>
    <published>2017-05-11T17:03:27.000Z</published>
    <updated>2023-10-18T03:08:41.945Z</updated>
    
    <content type="html"><![CDATA[<p>本篇讲如何放开 mysql 的远程访问权限。</p><a id="more"></a><blockquote><p>针对iptables设置</p></blockquote><h1 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h1><p>查看当前iptables状态  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;iptables status</span><br></pre></td></tr></table></figure><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 打开iptables设置文件</span><br><span class="line">sudo vi &#x2F;etc&#x2F;sysconfig&#x2F;iptables</span><br><span class="line"></span><br><span class="line"># 删除原3306规则DROP，新增3306规则ACCEPT</span><br><span class="line"># ip：需要开放的ip地址</span><br><span class="line"># 此处需要注意，-A INPUT -p tcp -m tcp --dport 3306 -j DROP这条规则时放到新增规则之后的，不然由于优先级无法生效。</span><br><span class="line">-A INPUT -s ip  -p tcp --dport 3306 -j ACCEPT</span><br></pre></td></tr></table></figure><p>继续查看iptables状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;iptables status</span><br></pre></td></tr></table></figure><p>mysql设置  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 展示用户(root)以及地址权限</span><br><span class="line">SHOW GRANTS FOR &#39;root&#39;@&#39;localhost&#39;</span><br><span class="line"></span><br><span class="line"># 参数说明</span><br><span class="line"># -- user 所属用户</span><br><span class="line"># -- password 当前用户登陆密码</span><br><span class="line"># -- ip 将要授权的远程ip，如果是对所有ip开发，则替换为 %</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;user&#39;@&#39;ip&#39; IDENTIFIED BY &#39;password&#39; WITH GRANT OPTION</span><br></pre></td></tr></table></figure><p>查看  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 刷新立即生效</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇讲如何放开 mysql 的远程访问权限。&lt;/p&gt;</summary>
    
    
    
    <category term="运维相关" scheme="https://shangdev.github.io/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Linux" scheme="https://shangdev.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
